covariate_uni <- cbind(covariate_uni,fac1)
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[2:length(covariate_uni)],
collapse = " + ",sep=""), sep = "")))
stat3 <- function(y){anova(aov(form2, data = covariates_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
colnames(p3) <- c("P.Value")
p3$adj.P.Val <- p.adjust(p2$P.Value, method = "fdr")
runApp('Escritorio/POMA/POMA')
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
stat <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
# ui.R
source("helpers.R")
library(shiny) #devtools::install_github("rstudio/shiny"); devtools::install_github("rstudio/shinyapps")
library(DT)
library(shinydashboard)
library(reshape2)
library(ggplot2)
library(impute)
#library(shinyIncubator) #devtools::install_github("rstudio/shinyIncubator")
library(gplots)
#library(rjson)
#library(base64enc)
library(ggbiplot)
library(plotly)
library(glmnet)
library(ggvis)
library(shinyhelper)
library(glue)
library(dashboardthemes)
library(tidyr)
library(limma)
library(mixOmics)
library(ggthemes)
library(dplyr)
library(ggrepel)
#library(edgeR)
#library(RColorBrewer)
library(ggfortify)
library(shinyBS)
#library(plotly)
#library(plot3D)
library(markdown)
#library(lazyeval)
#library(rgl)
#library(scales)
#library(heatmaply)
library(readr)
stat <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
stat <- function(x){t.test(x ~ Group, na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ Group, na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ Group, na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
stat <- function(x){t.test(x ~ data_uni$Group, na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ data_uni$Group, na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ data_uni$Group, na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
runApp('Escritorio/POMA/POMA')
stat <- function(x){t.test(x ~ data_uni[,'Group'], na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ data_uni[,'Group'], na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ data_uni[,'Group'], na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
stat <- function(x){t.test(x ~ data_uni[,'Group'], na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ data_uni[,'Group'], na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ data_uni[,'Group'], na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
p <- as.data.frame(sapply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
p <- as.data.frame(sapply(FUN=stat, X = data_uni[,c(3:ncol(data_uni))] ))
p <- as.data.frame(lapply(FUN=stat, X = data_uni[,c(3:ncol(data_uni))] ))
stat <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
class(data_uni$Group)
data_uni$Group <- as.factor(data_uni$Group)
stat <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
data_uni$Group <- as.factor(data_uni$Group)
stat <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
runApp('Escritorio/POMA/POMA')
View(data_uni)
data_uni<-data_uni[1:158,]
stat <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(p) <- c("P.Value")
p$adj.P.Val <- p.adjust(p$P.Value, method = "fdr")
G2 <- as.data.frame(apply(FUN=stat_G2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(G2) <- c("Mean G2")
G1 <- as.data.frame(apply(FUN=stat_G1, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(G1) <- c("Mean G1")
FC <- G2/G1
colnames(FC) <- c("FC")
FC <- round(as.numeric(FC$FC),4)
p <- cbind(G1,G2, FC, p)
p
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
data_uni<-data_uni[1:158,]
stat <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
data_uni<-read_csv("/home/pol/Escritorio/POMA/POMA/example_data/covariates.csv")
data_uni<-read_csv("/home/pol/Escritorio/POMA/POMA/example_data/metabolites.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
stat <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ data_uni[,2],na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
stat <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
x<-c(2,2,2,2)
t.test(x,x)
runApp('Escritorio/POMA/POMA')
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
stat2 <- function(x){anova(aov(x ~ Group, data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
colnames(p2) <- c("P.Value")
p2$adj.P.Val <- p.adjust(p2$P.Value, method = "fdr")
fac1 <- as.factor(data_uni$Group)
covariate_uni <- cbind(covariate_uni,fac1)
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[2:length(covariate_uni)],
collapse = " + ",sep=""), sep = "")))
stat2 <- function(x){anova(aov(x ~ Group, data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
colnames(p2) <- c("P.Value")
p2$adj.P.Val <- p.adjust(p2$P.Value, method = "fdr")
fac1 <- as.factor(data_uni$Group)
covariate_uni <- cbind(covariate_uni,fac1)
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[2:length(covariate_uni)],
collapse = " + ",sep=""), sep = "")))
stat3 <- function(y){anova(aov(form2, data = covariates_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
anova(aov(form2, data = covariates_uni))$"Pr(>F)"[1]
form2
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
fac1 <- as.factor(data_uni$Group)
covariate_uni <- cbind(covariate_uni,fac1)
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[2:length(covariate_uni)],
collapse = " + ",sep=""), sep = "")))
stat3 <- function(y){anova(aov(form2, data = covariates_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
aov(form2, data = covariates_uni)
aov(form2, data = covariates_uni)
form2
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
#data_uni<-read_csv("/home/pol/Escritorio/POMA/POMA/example_data/metabolites.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
####################### pol
stat2 <- function(x){anova(aov(x ~ Group, data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
colnames(p2) <- c("P.Value")
p2$adj.P.Val <- p.adjust(p2$P.Value, method = "fdr")
##################
fac1 <- as.factor(data_uni$Group)
covariate_uni <- cbind(covariate_uni,fac1)
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[2:length(covariate_uni)],
collapse = " + ",sep=""), sep = "")))
form2
stat3 <- function(y){anova(aov(form2, data = covariates_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
form2
aov(form2, data = covariates_uni)
form2
aov(fac1 ~ AgeatConsent + Gender + Smoking_condition + Drink_Alcohol +
, data = covariates_uni)
aov(fac1 ~ AgeatConsent + Gender + Smoking_condition + Drink_Alcohol , data = covariates_uni)
aov(. ~ AgeatConsent + Gender + Smoking_condition + Drink_Alcohol + fac1, data = covariates_uni)
View(X)
colnames(X)[1]
aov( Methyladenosine ~ AgeatConsent + Gender + Smoking_condition + Drink_Alcohol + fac1, data = covariates_uni)
stat3 <- function(y){anova(aov( Methyladenosine ~ AgeatConsent + Gender + Smoking_condition + Drink_Alcohol + fac1, data = covariates_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
covariate_uni <- merge(data_uni, covariate_uni, by = "ID")
View(covariate_uni)
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
stat2 <- function(x){anova(aov(x ~ Group, data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
colnames(p2) <- c("P.Value")
p2$adj.P.Val <- p.adjust(p2$P.Value, method = "fdr")
covariate_uni <- merge(data_uni, covariate_uni, by = "ID")
stat3 <- function(y){anova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[2:length(covariate_uni)],
collapse = " + ",sep=""), sep = "")))
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[length(data_uni):length(covariate_uni)],
collapse = " + ",sep=""), sep = "")))
form2
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[length(data_uni)+1:length(covariate_uni)],
collapse = " + ",sep=""), sep = "")))
stat3 <- function(y){anova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
form2
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[(length(data_uni)+1):length(covariate_uni)],
collapse = " + ",sep=""), sep = "")))
form2
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[2,(length(data_uni)+1):length(covariate_uni)],
collapse = " + ",sep=""), sep = "")))
form2 <- as.formula(noquote(paste(" y ~ ", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
form2
stat3 <- function(y){anova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
form2 <- as.formula(noquote(paste(" Proline ~ ", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
stat3 <- function(y){anova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
colnames(p3) <- c("P.Value")
p3$adj.P.Val <- p.adjust(p2$P.Value, method = "fdr")
p3
stat3
form2 <- as.formula(noquote(paste(" x ~ ", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
stat3 <- function(x){anova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
form2 <- as.formula(noquote(paste(" Proline  ~ ", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
stat3 <- function(x){manova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
form2 <- as.formula(noquote(paste(" y  ~ ", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
stat3 <- function(x){manova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
form2
y<- data_uni[,3:length(data_uni)]
form2 <- as.formula(noquote(paste(" y  ~ ", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
stat3 <- function(x){anova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
form2 <- as.formula(noquote(paste(" y  ~ ", paste("unlist(",colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))], ")",
collapse = " + ",sep=""), sep = "")))
stat3 <- function(x){anova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
form2
form2 <- as.formula(noquote(paste(" y  ~ ", "unlist(", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = ""),")"))
form2 <- as.formula(noquote(paste(" y  ~ ", "unlist(", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), ")", sep = "")))
form2 <
form2
form2 <- as.formula(noquote(paste(" y  ~ ", "unlist(", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), ")", sep = "")))
form2
stat3 <- function(x){anova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
form2 <- as.formula(noquote(paste("y  ~ ", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
#data_uni<-read_csv("/home/pol/Escritorio/POMA/POMA/example_data/metabolites.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
####################### pol
stat2 <- function(x){anova(aov(x ~ Group, data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
colnames(p2) <- c("P.Value")
p2$adj.P.Val <- p.adjust(p2$P.Value, method = "fdr")
##################
covariate_uni <- merge(data_uni, covariate_uni, by = "ID")
form2 <- as.formula(noquote(paste("y  ~ ", paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
form2
stat3 <- function(y){anova(aov(form2, data = covariate_uni))$"Pr(>F)"[1]}
stat3
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
y<-NULL
form2
form2 <- as.formula(noquote(paste(paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
form2 <- as.formula(noquote(paste(paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))]
covariate_uni <- merge(data_uni, covariate_uni, by = "ID")
form2 <- as.formula(noquote(paste(paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = "")))
form2 <- as.formula(noquote(paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep=""), sep = ""))
form2 <- as.formula(noquote(paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))],
collapse = " + ",sep="")))
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
stat2 <- function(x){anova(aov(x ~ Group, data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
colnames(p2) <- c("P.Value")
p2$adj.P.Val <- p.adjust(p2$P.Value, method = "fdr")
covariate_uni <- merge(data_uni, covariate_uni, by = "ID")
form2 <- as.formula(noquote(paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))], collapse = " + ",sep="")))
stat3 <- function(y){anova(aov(y ~ Group, data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
noms_anova <- colnames(data_cof)[2:(length(covariate_uni)+1)]
noms_anova <- paste(as.character(noms_anova),collapse=" + ", sep="")
stat3 <- function(x){anova(aov(as.formula(paste(" x ~ ",noms_anova)), data=data_cof))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
noms_anova <- colnames(data_cof)[2:(length(covariate_uni)+1)]
noms_anova <- paste(as.character(noms_anova),collapse=" + ", sep="")
stat3 <- function(x){anova(aov(as.formula(paste(" x ~ ",noms_anova)), data=data_cof))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
stat3 <- function(y){anova(aov(y ~ unlist(Group), data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
form2
form2 <- as.formula(noquote(paste(colnames(covariate_uni)[c((length(data_uni)+1):length(covariate_uni))], collapse = " + ",sep="")))
covariate_uni <- merge(data_uni, covariate_uni, by = "ID")
form2 <- as.formula(noquote(paste(colnames(covariate_uni)[c((length(data_uni)+1):length(covariate_uni))], collapse = " + ",sep="")))
colnames(covariate_uni)[c((length(data_uni)+1):length(covariate_uni))]
paste(colnames(covariate_uni)[c((length(data_uni)+1):length(covariate_uni))], collapse = " + ",sep="")
form2<-noquote(paste(colnames(covariate_uni)[c((length(data_uni)+1):length(covariate_uni))], collapse = " + ",sep=""))
stat3 <- function(y){anova(aov(y ~ unlist(Group) + as.formula(form2), data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
form2 <- noquote(paste("y~",paste(colnames(covariate_uni)[c((length(data_uni)+1):length(covariate_uni))], collapse = " + ",sep="")))
form2
form2 <- noquote(paste("y ~",paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))], collapse = " + ",sep="")))
form2
stat3 <- function(y){anova(aov(as.formula(form2), data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
covariate_uni <- merge(data_uni, covariate_uni, by = "ID")
form2 <- noquote(paste("y ~",paste(colnames(covariate_uni)[c(2,(length(data_uni)+1):length(covariate_uni))], collapse = " + ",sep="")))
form2
stat3 <- function(y){anova(aov(as.formula(form2), data = covariate_uni))$"Pr(>F)"[1]}
p3 <- as.data.frame(apply(FUN=stat3, MARGIN = 2, X = covariate_uni[,3:length(data_uni)]))
colnames(p3) <- c("P.Value")
p3$adj.P.Val <- p.adjust(p2$P.Value, method = "fdr")
p3
runApp('Escritorio/POMA/POMA')
data_uni<-read_csv("/home/pol/Escritorio/POMA/POMA/example_data/metabolites.csv")
covariate_uni<-read_csv("/home/pol/Escritorio/POMA/POMA/example_data/covariates.csv")
stat2 <- function(x){anova(aov(x ~ Group, data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
colnames(p2) <- c("P.Value")
stat2 <- function(x){anova(aov(x ~ as.formula(Group), data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
stat2 <- function(x){anova(aov(x ~ as.formula(data_uni$Group), data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
stat2 <- function(x){anova(aov(x ~ Group, data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
data_uni$X3.HBA<-NULL
stat2 <- function(x){anova(aov(x ~ Group, data=data_uni))$"Pr(>F)"[1]}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))]))
colnames(p2) <- c("P.Value")
p2$adj.P.Val <- p.adjust(p2$P.Value, method = "fdr")
covariate_uni <- merge(data_uni, covariate_uni, by = "ID")
runApp('Escritorio/POMA/POMA')
runApp('Escritorio/POMA/POMA')
runApp('Escritorio/POMA/POMA')
runApp('Escritorio/POMA/POMA')
runApp('Escritorio/POMA/POMA')
X <- as.matrix(iris[,1:4])
Y <- as.factor(iris[,5])
# grid of possible keepX values that will be tested for each component
list.keepX <- c(1:6)
tune.splsda <- tune.splsda(X, Y, ncomp = input$num_comp3, validation = 'Mfold', folds = 5,
progressBar = FALSE, dist = 'max.dist', measure = "BER",
test.keepX = list.keepX, nrepeat = 10, cpus = 4)
tune.splsda <- tune.splsda(X, Y, ncomp = 3, validation = 'Mfold', folds = 5,
progressBar = FALSE, dist = 'max.dist', measure = "BER",
test.keepX = list.keepX, nrepeat = 10, cpus = 4)
error <- tune.splsda$error.rate
ncomp <- tune.splsda$choice.ncomp$ncomp # optimal number of components based on t-tests
error
select.keepX <- tune.splsda$choice.keepX[1:ncomp]  # optimal number of variables to select
select.keepX
ncomp
errors_splsda_out<-as.data.frame(tune.splsda$error.rate)
errors_splsda_out$features<-rownames(errors_splsda_out)
errors_splsda1<-melt(errors_splsda_out, id.vars=c("features"))
errors_sd<-as.data.frame(tune.splsda$error.rate.sd)
errors_sd$features_sd<-rownames(errors_sd)
errors_sd<-melt(errors_sd, id.vars=c("features_sd"))
errors_splsda <- cbind(errors_splsda1,sd = errors_sd[,3])
bal_error_rate <- ggplotly(ggplot(data=errors_splsda, aes(x=features, y=value, group=variable)) +
geom_line(aes(color=variable)) +
geom_point(aes(color=variable)) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.1) +
theme_minimal() +
geom_point(size=3,alpha=0.5) + #Size and alpha just for fun
scale_color_manual(values = c("#FF1BB3","#A7FF5B","#99554D","blue","darkgoldenrod2","gray9")))
####
if (ncomp == 1){
ncompX<-2
}else{
ncompX<-ncomp}
res.splsda <- splsda(X, Y, ncomp = ncompX, keepX = select.keepX)
SPLSDAi<-data.frame(res.splsda$variates$X, Groups=Y)
colnames(SPLSDAi)[1:2]<-c("Component 1", "Component 2")
splsda <- ggplotly(ggplot(SPLSDAi, aes(x=`Component 1`,y=`Component 2`,col=Groups))+
geom_point(size=3,alpha=0.5)+ #Size and alpha just for fun
scale_color_manual(values = c("#FF1BB3","#A7FF5B","#99554D","blue","darkgoldenrod2","gray9"))
+ #your colors here
stat_ellipse(aes(x=`Component 1`,y=`Component 2`,col=Groups),
type = "norm")
+ theme_minimal())
splsdaX <- data.frame(res.splsda$variates$X)
splsdaX
View(splsdaX)
res.splsda$keepX
res.splsda$input.X
res.splsda$loadings$X
res.splsda$variates$Y
res.splsda$variates$X
splsdaX <- data.frame(as.matrix(res.splsda$variates$X))
splsdaX
class(res.splsda$variates$X)
perf.splsda <- perf(res.splsda, validation = "Mfold", folds = 5,
dist = 'max.dist', nrepeat = 10,
progressBar = FALSE)
ind.match <- match(selectVar(res.splsda, comp = 1)$name,
names(perf.splsda$features$stable[[1]]))
#extract the frequency of selection of those selected variables
Freq <- as.numeric(perf.plsda$features$stable[[1]][ind.match])
#extract the frequency of selection of those selected variables
Freq <- as.numeric(perf.splsda$features$stable[[1]][ind.match])
data.frame(selectVar(res.splsda, comp = 1)$value, Freq)
Freq
perf.splsda
ind.match
data.frame(selectVar(res.splsda, comp = 1)$value, Freq)
iris
runApp('Escritorio/POMA/POMA')
selected_variables <- data.frame(selectVar(res.splsda, comp = 1)$value, Freq)
View(selected_variables)
perf.splsda <- perf(res.splsda, validation = "Mfold", folds = 5,
dist = 'max.dist', nrepeat = 10,
progressBar = FALSE)
perf.splsda$features$stable[[1]
]
names(perf.splsda$features$stable[[1]])
ind.match <- match(selectVar(res.splsda, comp = 1)$name,
names(perf.splsda$features$stable[[1]]))
ind.match
iris
splsdaX <- data.frame(as.matrix(res.splsda$variates$X))
Freq <- as.numeric(perf.splsda$features$stable[[1]][ind.match])
selected_variables <- data.frame(selectVar(res.splsda, comp = 1)$value, Freq)
selected_variables
perf.splsda$features
perf.splsda$features$stable[[1]]
perf.splsda$features$stable[[1]][ind.match]
Freq <- as.numeric(perf.splsda$features$stable[[1]][ind.match])
Freq
perf.splsda$features$stable[[1]][ind.match]
selectVar(res.splsda, comp = 1)$name,
names(perf.splsda$features$stable[[1]])
ind.match <- match(selectVar(res.splsda, comp = 1)$name,
names(perf.splsda$features$stable[[2]]))
Freq <- as.numeric(perf.splsda$features$stable[[1]][ind.match])
selected_variables <- data.frame(selectVar(res.splsda, comp = 1)$value, Freq)
View(selected_variables)
ind.match <- match(selectVar(res.splsda, comp = 2)$name,
names(perf.splsda$features$stable[[2]]))
Freq <- as.numeric(perf.splsda$features$stable[[2]][ind.match])
selected_variables <- data.frame(selectVar(res.splsda, comp = 2)$value, Freq)
View(selected_variables)
ind.match <- match(selectVar(res.splsda, comp = 1)$name,
names(perf.splsda$features$stable[[1]]))
Freq <- as.numeric(perf.splsda$features$stable[[1]][ind.match])
selected_variables <- data.frame(selectVar(res.splsda, comp = 1)$value, Freq)
View(selected_variables)
selectVar(res.splsda, comp = 1)
selectVar(res.splsda, comp = 1)$name
runApp('Escritorio/POMA/POMA')
SPLSDAi
runApp('Escritorio/POMA/POMA')
runApp('Escritorio/POMA/POMA')
res.splsda$variates$X
splsdaX <- data.frame(res.splsda$variates$X)
View(splsdaX)
selectVar(res.splsda, comp = 1)
selected_variables <- data.frame(selectVar(res.splsda, comp = 1))
View(selected_variables)
selected_variables <- data.frame(selectVar(res.splsda, comp = 1))[,1:2]
View(selected_variables)
runApp('Escritorio/POMA/POMA')
