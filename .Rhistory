function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
to_imp_data$Methyladenosine[1:50] <-NA
to_imp_data$Deoxyuridine[50:100] <-NA
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
to_imp_data$Methyladenosine[1:50] <-NA
to_imp_data$Deoxyuridine[50:100] <-NA
samples_groups<-to_imp_data[,1:2]
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
supress <- which(count_NA > 20, arr.ind=TRUE )
supress
to_imp_data<-to_imp_data[,2:length(to_imp_data)][,!supress]
all(count_NA > 20)
lapply(count_NA, function(x) all(x > 20))
supress <- c(lapply(count_NA, function(x) all(x > 20)));supress
supress <- data_frame(lapply(count_NA, function(x) all(x > 20)));supress
View(supress)
supress <- data_frame(t(lapply(count_NA, function(x) all(x > 20))));supress
supress <- as.data.frame(t(lapply(count_NA, function(x) all(x > 20))));supress
View(supress)
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
runApp()
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
to_imp_data$Methyladenosine[1:50] <-NA
to_imp_data$Deoxyuridine[50:100] <-NA
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
supress <- as.data.frame(t(lapply(count_NA, function(x) all(x > 20))))
to_imp_data<-to_imp_data[,2:length(to_imp_data)][,!supress]
to_imp_data<-to_imp_data[,2:length(to_imp_data)][!supress]
View(to_imp_data)
supress <- c(t(lapply(count_NA, function(x) all(x > 20))))
to_imp_data <- to_imp_data[,2:length(to_imp_data)][,!supress]
supress
supress <- as.data.frame(t(lapply(count_NA, function(x) all(x > 20))))
to_imp_data <- to_imp_data[,2:length(to_imp_data)][supress]
View(supress)
supress <- as.vector(t(lapply(count_NA, function(x) all(x > 20))))
supress
to_imp_data <- to_imp_data[,2:length(to_imp_data)][!supress]
to_imp_data <- to_imp_data[,2:length(to_imp_data)][,!supress]
supress
View(supress)
supress <- c(supress)
to_imp_data <- to_imp_data[,2:length(to_imp_data)][supress]
supress
supress <- as.data.frame(lapply(count_NA, function(x) all(x > 20)))
View(supress)
to_imp_data <- to_imp_data[,2:length(to_imp_data)][!,supress]
to_imp_data <- to_imp_data[,2:length(to_imp_data)][,!supress]
supress <- c(supress[1,])
supress
supress <- unlist(supress)
to_imp_data <- to_imp_data[,2:length(to_imp_data)][,!supress]
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
to_imp_data$Methyladenosine[1:50] <-NA
to_imp_data$Deoxyuridine[50:100] <-NA
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
supress <- as.data.frame(lapply(count_NA, function(x) all(x > 20)))
supress <- unlist(supress)
supress
to_imp_data <- to_imp_data[,2:length(to_imp_data)][!supress]
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
to_imp_data$Methyladenosine[1:50] <-NA
to_imp_data$Deoxyuridine[50:100] <-NA
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
supress <- as.data.frame(lapply(count_NA, function(x) all(x > 20)))
supress <- unlist(supress)
to_imp_data <- to_imp_data[,3:length(to_imp_data)][!supress]
View(to_imp_data)
to_imp_data <- to_imp_data[,3:length(to_imp_data)][,!supress]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
data_uni <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
com_names <- as.vector(Limma()$com_names)
initialmodel <- model.matrix( ~ 0 + fac1)
data_uni <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
com_names <- as.vector(com_names)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts(com_names[1],
levels = initialmodel)
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
model <- contrasts.fit(model, cont.matrix)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) ,
coef = 1,
sort.by = "p")
res <- topTable(modelstats, number = ncol(data_uni) ,
coef = com_names[1],
sort.by = "p")
runApp()
runApp()
runApp()
runApp()
runApp()
com_names
Coef <- as.character("C-H")
com_names <- relevel(as.factor(com_names), ref = as.factor(Coef));com_names
com_names <- relevel(as.factor(com_names), ref = Coef);com_names
runApp()
paste0('"', Coef, '"')
paste0('\"', Coef, '\"')
paste0('\."', Coef, '\."')
paste0('//."', Coef, '//."')
paste0('//"', Coef, '//"')
paste0('\\"', Coef, '\\"')
Coef
com_names
as.factor(as.character(com_names))
as.factor(as.character(com_names[1]))
com_names
data_uni <- iris[,c(5,1:4)]
data_uni <- cbind(ID=seq(1:150, data_uni))
colnames(data_uni)[2] <- "Group"
data_uni <- iris[,c(5,1:4)]
data_uni <- cbind(ID=seq(1:150), data_uni)
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
com_names <- as.vector(com_names)
com_names
Coef <- as.character("setosa-virginica")
com_names <- relevel(as.factor(com_names), ref = Coef);com_names
com_names <- data.frame(relevel(as.factor(com_names), ref = Coef));com_names
com_names <- data.frame(relevel(as.factor(com_names$relevel.as.factor.com_names...ref...Coef.), ref = Coef));com_names
com_names <- data.frame(relevel(com_names$relevel.as.factor.com_names...ref...Coef., ref = Coef));com_names
which(com_names == Coef)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
com_names
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
data_uni <- readr::read_csv("/Users/pol/Dropbox/Shiny_apps/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
com_names
com_names[1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
data_uni <- readr::read_csv("/Users/pol/Dropbox/Shiny_apps/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
com_names <- data.frame(comparisons = com_names)
View(com_names)
runApp()
runApp()
com_names <- NULL
com_names <- c()
runApp()
com_names <- c(NULL)
runApp()
write.csv(iris,"/Users/pol/Desktop/iris.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?makeContrasts
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_uni <- readr::read_csv("/Users/pol/Dropbox/Shiny_apps/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
environment(com_names)
com_names
com_names
ls(com_names)
com_names
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_uni <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
data_uni <- iris[,c(5,1:4)]
data_uni <- cbind(ID=seq(1:150), data_uni)
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
com_names <- com_names[1]
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts(as.character(com_names),
levels = initialmodel)
cont.matrix
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
model <- contrasts.fit(model, cont.matrix)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) ,
coef = as.character(com_names),
sort.by = "p")
shiny::runGitHub("shinyLimma", "SJCaldwell")
install.packages("shinyTable")
library(devtools)
install_github("trestletech/shinyTable")
shiny::runGitHub("shinyLimma", "SJCaldwell")
shiny::runGitHub("shinyLimma", "SJCaldwell")
install.packages("shinyjs")
shiny::runGitHub("shinyLimma", "SJCaldwell")
install.packages("shinyjs")
shiny::runGitHub("shinyLimma", "SJCaldwell")
install.packages("vsn")
shiny::runGitHub("shinyLimma", "SJCaldwell")
install.packages("RUnit")
shiny::runGitHub("shinyLimma", "SJCaldwell")
install.packages("convert")
shiny::runGitHub("shinyLimma", "SJCaldwell")
shiny::runGitHub("shinyLimma", "SJCaldwell")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
covariate_limma <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/COV_CRC_ST000284.csv")
data_uni <- iris[,c(5,1:4)]
data_uni <- data_uni[1:132,]
data_uni <- cbind(ID=seq(1:132), data_uni)
colnames(data_uni)[2] <- "Group"
covariate_limma <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/COV_CRC_ST000284.csv")
form <- as.formula(noquote(paste("~ 0 + fac1 + ", paste(colnames(covariate_limma)[2:length(covariate_limma)],
collapse = " + ", sep=""), sep = "")))
form
initialmodel2 <- model.matrix(form , covariate_limma)
trans_limma2 <- t(data_limma[,c(3:ncol(data_limma))])
fac1 <- as.factor(data_limma$Group)
form <- as.formula(noquote(paste("~ 0 + fac1 + ", paste(colnames(covariate_limma)[2:length(covariate_limma)],
collapse = " + ", sep=""), sep = "")))
data_limma <- iris[,c(5,1:4)]
data_limma <- data_limma[1:132,]
data_limma <- cbind(ID=seq(1:132), data_limma)
colnames(data_limma)[2] <- "Group"
covariate_limma <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/COV_CRC_ST000284.csv")
fac1 <- as.factor(data_limma$Group)
form <- as.formula(noquote(paste("~ 0 + fac1 + ", paste(colnames(covariate_limma)[2:length(covariate_limma)],
collapse = " + ", sep=""), sep = "")))
form
initialmodel2 <- model.matrix(form , covariate_limma)
initialmodel2
contrasts <- levels(as.factor(data_limma$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
combinationNames <- c()
for (i in 1:nrow(combinations)){
combinationNames[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
combinationNames
contrasts <- levels(as.factor(data_limma$Group));contrasts
combinations <- expand.grid(contrasts, contrasts) ;combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),];combinations
combinations <- combinations[order(combinations$Var1),];combinations
contrasts <- levels(as.factor(data_limma$Group));contrasts
combinations <- expand.grid(contrasts, contrasts) ;combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),];combinations
#combinations <- combinations[order(combinations$Var1),];combinations #
apply(combinations,2,rev)
contrasts <- levels(as.factor(data_limma$Group));contrasts
combinations <- expand.grid(contrasts, contrasts) ;combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),];combinations
contrasts <- levels(as.factor(data_limma$Group));contrasts
combinations <- expand.grid(contrasts, contrasts) ;combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),];combinations
dplyr::anti_join(combinations)
dplyr::anti_join(combinations, combinations[!duplicated(combinations),])
data %>% distinct(combinations$Var1, combinations$Var2)
contrasts <- levels(as.factor(data_limma$Group));contrasts
combinations <- expand.grid(contrasts, contrasts) ;combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),];combinations
combinations %>% distinct(combinations$Var1, combinations$Var2)
contrasts <- levels(as.factor(data_limma$Group));contrasts
combinations <- expand.grid(contrasts, contrasts) ;combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),];combinations
combinations[!duplicated(t(apply(combinations[c("Var1", "Var2")], 1, sort))), ]
runApp()
length(levels(fac1)
length(levels(fac1))
length(levels(fac1))
contrasts
combinations <- combinations[!duplicated(t(apply(combinations[c("Var1", "Var2")], 1, sort))), ]
combinations
runApp()
runApp()
runApp('~/Escritorio/Shiny_Dashboard_Template')
runApp('~/Escritorio/Shiny_Dashboard_Template')
runApp('~/Escritorio/Shiny_Dashboard_Template')
runApp('~/Escritorio/Shiny_Dashboard_Template')
runApp('~/Escritorio/Shiny_Dashboard_Template')
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rsconnect::appDependencies()
runApp()
?library
runApp()
runApp()
BiocInstaller::biocinstallRepos()
BiocInstaller::biocinstallRepos()
runApp()
library('devtools')
install_github("mixOmicsTeam/mixOmics")
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
?dropdownMenu
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?dropdownMenuOutput
runApp()
runApp()
?dropdownActionMenu
runApp()
runApp()
runApp()
?renderMenu
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/Untitled.R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
vroom::vroom()
?vroom
library(shiny)
?vroom
?textInput
runApp()
write.table(iris[,c(5,rep(1,150),1:4)], "test.txt", sep = "\n")
runApp()
write.table(iris[,c(5,1:4)], "test.txt", sep = "\n")
runApp()
runApp()
data <- vroom::vroom("/home/pol/Escritorio/Database_InCHIANTIstudy_n1155_9years_DAIRY_2507219.csv", delim = ",")
library(shiny)
?radioButtons
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
tempdir()
runApp()
runApp()
runApp()
?tempdir
runApp()
runApp()
runApp()
runApp()
runApp()
