plot2 <- ggplotly(ggplot(rp_plot, aes(x = rank2, y = pfp2)) +
geom_point(size = 2) +
theme_minimal() +
xlab("Number of identified metabolites") +
ylab("Estimated PFP"))
final.plot <- subplot(plot1, plot2, nrows = 2, shareX = TRUE, shareY = TRUE)
final.plot <- final.plot %>%
layout(annotations = list(
list(x = 0.5 , y = 1.05, text = paste0("Identification of Up-regulated metabolites under class ", class2),
showarrow = F, xref='paper', yref='paper'),
list(x = 0.5 , y = 0.5, text = paste0("Identification of Down-regulated metabolites under class ", class2),
showarrow = F, xref='paper', yref='paper')))
final.plot
runApp()
plot1 <- ggplotly(ggplot(rp_plot, aes(x = rank1, y = pfp1)) +
geom_point(size = 1.5, alpha=0.2) +
theme_minimal() +
xlab("Number of identified metabolites") +
ylab("Estimated PFP"))
plot2 <- ggplotly(ggplot(rp_plot, aes(x = rank2, y = pfp2)) +
geom_point(size = 1.5, alpha=0.2) +
theme_minimal() +
xlab("Number of identified metabolites") +
ylab("Estimated PFP"))
final.plot <- subplot(plot1, plot2, nrows = 2, shareX = TRUE, shareY = TRUE)
final.plot <- final.plot %>%
layout(annotations = list(
list(x = 0.5 , y = 1.05, text = paste0("Identification of Up-regulated metabolites under class ", class2),
showarrow = F, xref='paper', yref='paper'),
list(x = 0.5 , y = 0.5, text = paste0("Identification of Down-regulated metabolites under class ", class2),
showarrow = F, xref='paper', yref='paper')))
final.plot
plot1 <- ggplotly(ggplot(rp_plot, aes(x = rank1, y = pfp1)) +
geom_point(size = 1.5, alpha=0.8) +
theme_minimal() +
xlab("Number of identified metabolites") +
ylab("Estimated PFP"))
plot2 <- ggplotly(ggplot(rp_plot, aes(x = rank2, y = pfp2)) +
geom_point(size = 1.5, alpha=0.8) +
theme_minimal() +
xlab("Number of identified metabolites") +
ylab("Estimated PFP"))
final.plot <- subplot(plot1, plot2, nrows = 2, shareX = TRUE, shareY = TRUE)
final.plot <- final.plot %>%
layout(annotations = list(
list(x = 0.5 , y = 1.05, text = paste0("Identification of Up-regulated metabolites under class ", class2),
showarrow = F, xref='paper', yref='paper'),
list(x = 0.5 , y = 0.5, text = paste0("Identification of Down-regulated metabolites under class ", class2),
showarrow = F, xref='paper', yref='paper')))
final.plot
runApp()
View(data)
data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data)[2] <- "Group"
View(data)
ggplot(data, aes(x=Group, y=Glycochenodexycholate)) +
geom_boxplot()
ggplot(data, aes(x=Group, y=Glycochenodeoxycholate)) +
geom_boxplot()
ggplot(data, aes(x=Group, y=Glycocholate)) +
geom_boxplot()
ggplot(data, aes(x=Group, y=`MalonicAcid/3HBA`)) +
geom_boxplot()
runApp()
runApp()
db.nico <- read.csv("/media/pol/4CF1-C134/INCHINATI_YOGURT_urine_NHL.csv", sep = ";")
db.nico <- db.nico[!is.na(db.nico$IXAGE),]
db.nico <- db.nico[db.nico$IXAGE >= 65,]
head(db.nico[,1:10])
db.nico <- db.nico[db.nico$Urine == 1,]
db.nico <- db.nico[!is.na(db.nico$Urine),]
db.nico <- db.nico[db.nico$Urine == 1,]
db.nico$AYFWGTLS <- NA
db.nico$AYFEXHAU <- NA
db.nico$AYFPHYAC <- NA
db.nico <- read.csv("/media/pol/4CF1-C134/INCHINATI_YOGURT_urine_NHL.csv", sep = ";")
db.nico <- db.nico[!is.na(db.nico$IXAGE),]
db.nico <- db.nico[db.nico$IXAGE >= 65,]
##
#iurin <- readxl::read_excel("/media/pol/041E-7A70/InCHIANTI_Mostres_orina_METAB_MRB13102016_NHL.xlsx", sheet = "Hoja1")
#colnames(iurin)[1] <- "CODE98"
#db.final <- merge(db.nico, iurin, by = "CODE98")
db.nico <- db.nico[!is.na(db.nico$Urine),]
db.nico <- db.nico[db.nico$Urine == 1,]
##
db.nico$AYFWGTLS <- NA
db.nico$AYFEXHAU <- NA
db.nico$AYFPHYAC <- NA
db.nico$AYFWLKCT <- NA
db.nico$AYFSTRNC <- NA
for (i in 1:nrow(db.nico)){
if(db.nico$IY9_V2[i] > 4.5 & db.nico$IY8_V31[i] != 4){
db.nico$AYFWGTLS[i] <- 1
}
else if(db.nico$IY9_V1[i] != 0 & db.nico$IY9_V1[i] != 1){
db.nico$AYFWGTLS[i] <- 9
}
else if(db.nico$IY9_V1[i] == 1 & is.na(db.nico$IY9_V2[i])){
db.nico$AYFWGTLS[i] <- 9
}
else {
db.nico$AYFWGTLS[i] <- 0
}
}
i
db.nico$IY9_V2[i]
db.nico$IY8_V31[i]
db.nico$AYFWGTLS[i]
for (i in 1:nrow(db.nico)){
if(db.nico$IY9_V2[i] > 4.5 & db.nico$IY8_V31[i] != 4){
db.nico$AYFWGTLS[i] <- 1
}
else if(db.nico$IY9_V1[i] == 1 & is.na(db.nico$IY9_V2[i])){
db.nico$AYFWGTLS[i] <- 9
}
else {
db.nico$AYFWGTLS[i] <- 0
}
}
for (i in 1:nrow(db.nico)){
if(db.nico$IY9_V1[i] == 1 & is.na(db.nico$IY9_V2[i])){
db.nico$AYFWGTLS[i] <- 9
}
if(db.nico$IY9_V2[i] > 4.5 & db.nico$IY8_V31[i] != 4){
db.nico$AYFWGTLS[i] <- 1
}
else {
db.nico$AYFWGTLS[i] <- 0
}
}
db.nico <- read.csv("/media/pol/4CF1-C134/INCHINATI_YOGURT_urine_NHL.csv", sep = ";")
db.nico <- db.nico[!is.na(db.nico$IXAGE),]
db.nico <- db.nico[db.nico$IXAGE >= 65,]
##
#iurin <- readxl::read_excel("/media/pol/041E-7A70/InCHIANTI_Mostres_orina_METAB_MRB13102016_NHL.xlsx", sheet = "Hoja1")
#colnames(iurin)[1] <- "CODE98"
#db.final <- merge(db.nico, iurin, by = "CODE98")
db.nico <- db.nico[!is.na(db.nico$Urine),]
db.nico <- db.nico[db.nico$Urine == 1,]
##
db.nico$AYFWGTLS <- 0
for (i in 1:nrow(db.nico)){
if(db.nico$IY9_V1[i] == 1 & is.na(db.nico$IY9_V2[i])){
db.nico$AYFWGTLS[i] <- 9
}
if(db.nico$IY9_V2[i] > 4.5 & db.nico$IY8_V31[i] != 4){
db.nico$AYFWGTLS[i] <- 1
}
else {
db.nico$AYFWGTLS[i] <- 0
}
}
for (i in 1:nrow(db.nico)){
if(db.nico$IY9_V1[i] == 1 & is.na(db.nico$IY9_V2[i])){
db.nico$AYFWGTLS[i] <- 9
}
#if(db.nico$IY9_V2[i] > 4.5 & db.nico$IY8_V31[i] != 4){
#  db.nico$AYFWGTLS[i] <- 1
#}
else {
db.nico$AYFWGTLS[i] <- 0
}
}
is.na(db.nico$IY9_V2[i])
db.nico$IY9_V1[i] == 1
db.nico$IY9_V1[i]
i<-33
db.nico$IY9_V1[i]
db.nico$IY9_V1[i] == 1
db.nico <- read.csv("/media/pol/4CF1-C134/INCHINATI_YOGURT_urine_NHL.csv", sep = ";")
db.nico <- db.nico[!is.na(db.nico$IXAGE),]
db.nico <- db.nico[db.nico$IXAGE >= 65,]
##
#iurin <- readxl::read_excel("/media/pol/041E-7A70/InCHIANTI_Mostres_orina_METAB_MRB13102016_NHL.xlsx", sheet = "Hoja1")
#colnames(iurin)[1] <- "CODE98"
#db.final <- merge(db.nico, iurin, by = "CODE98")
db.nico <- db.nico[!is.na(db.nico$Urine),]
db.nico <- db.nico[db.nico$Urine == 1,]
##
db.nico$AYFWGTLS <- NA
db.nico$AYFEXHAU <- NA
db.nico$AYFPHYAC <- NA
db.nico$AYFWLKCT <- NA
db.nico$AYFSTRNC <- NA
for (i in 1:nrow(db.nico)){
if(db.nico$IY5_V7[i] <= 4 & db.nico$IY5_V7[i] >= 3){
db.nico$AYFEXHAU[i] <- 1
}
if(is.na(db.nico$IY5_V7[i])){
db.nico$AYFEXHAU[i] <- 9
}
else {
db.nico$AYFEXHAU[i] <- 0
}
}
for (i in 1:nrow(db.nico)){
if(is.na(db.nico$IY5_V7[i])){
db.nico$AYFEXHAU[i] <- 9
}
if(db.nico$IY5_V7[i] <= 4 & db.nico$IY5_V7[i] >= 3){
db.nico$AYFEXHAU[i] <- 1
}
else {
db.nico$AYFEXHAU[i] <- 0
}
}
db.nico$AYFEXHAU[i]
i
head(db.nico[,1:10])
for (i in 1:nrow(db.nico)){
if(is.na(db.nico$IY5_V7[i])){
db.nico$AYFEXHAU[i] <- 9
}
if(db.nico$IY5_V7[i] <= 4 | db.nico$IY5_V7[i] >= 3){
db.nico$AYFEXHAU[i] <- 1
}
else {
db.nico$AYFEXHAU[i] <- 0
}
}
i
db.nico$AYFEXHAU[i]
for (i in 1:nrow(db.nico)){
if(is.na(db.nico$IY5_V7[i])){
db.nico$AYFEXHAU[i] <- 9
}
else if(db.nico$IY5_V7[i] <= 4 | db.nico$IY5_V7[i] >= 3){
db.nico$AYFEXHAU[i] <- 1
}
else {
db.nico$AYFEXHAU[i] <- 0
}
}
for (i in 1:nrow(db.nico)){
if(is.na(db.nico$IY5_V7[i])){
db.nico$AYFEXHAU[i] <- 9
}
else if(db.nico$IY5_V7[i] <= 4 & db.nico$IY5_V7[i] >= 3){
db.nico$AYFEXHAU[i] <- 1
}
else {
db.nico$AYFEXHAU[i] <- 0
}
}
db.nico$AYFEXHAU
for (i in 1:nrow(db.nico)){
if(db.nico$IY9_V1[i] == 1 & is.na(db.nico$IY9_V2[i])){
db.nico$AYFWGTLS[i] <- 9
}
else if(db.nico$IY9_V2[i] > 4.5 & db.nico$IY8_V31[i] != 4){
db.nico$AYFWGTLS[i] <- 1
}
else {
db.nico$AYFWGTLS[i] <- 0
}
}
runApp()
table(db.nico$AYFEXHAU)
runApp()
runApp()
runApp()
runApp()
data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data)[2] <- "Group"
stat2 <- function(x){wilcox.test(x~Group)}
stat2
stat2 <- apply(data,2,function(x){wilcox.test(x~Group)})
View(data)
stat2 <- apply(data,2,function(x){wilcox.test(x ~ Group)})
data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data)[2] <- "Group"
stat2 <- function(x){wilcox.test(x ~ Group)}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data[,c(3:ncol(data))]))
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data[,c(2:ncol(data))]))
stat2 <- function(x){wilcox.test(x ~ as.factor(Group))}
p2 <- as.data.frame(apply(FUN=stat2, MARGIN = 2, X = data[,c(2:ncol(data))]))
stat2 <- apply(data,2,function(x){wilcox.test(x ~ Group)})
data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data)[2] <- "Group"
Group <- data$Group
stat2 <- apply(data,2,function(x){wilcox.test(x ~ Group)})
stat2 <- apply(data[,2:ncol(data)],2,function(x){wilcox.test(x ~ Group)})
stat2 <- apply(data[,3:ncol(data)],2,function(x){wilcox.test(x ~ Group)})
stat2
stat2 <- apply(data[,3:ncol(data)],2,function(x){wilcox.test(x ~ Group)$p.value})
stat2
data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data)[2] <- "Group"
Group <- data$Group
non_param_mann <- as.data.frame(apply(data[,3:ncol(data)],2,function(x){wilcox.test(x ~ Group)$p.value}))
colnames(non_param_mann) <- c("P.Value")
non_param_mann$adj.P.Val <- p.adjust(non_param_mann$P.Value, method = "fdr")
View(non_param_mann)
runApp()
non_param_wil <- as.data.frame(apply(data[,3:ncol(data)],2,function(x){wilcox.test(x ~ Group, paired=TRUE)$p.value}))
non_param_kru <- as.data.frame(apply(data[,3:ncol(data)],2,function(x){kruskal.test(x ~ Group)$p.value}))
data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data)[2] <- "Group"
Group <- data$Group
non_param_kru <- as.data.frame(apply(data[,3:ncol(data)],2,function(x){kruskal.test(x ~ Group)$p.value}))
non_param_kru <- as.data.frame(apply(data[,3:ncol(data)],2,function(x){kruskal.test(x ~ as.factor(Group))$p.value}))
non_param_mann <- as.data.frame(apply(data[,3:ncol(data)],2,function(x){wilcox.test(x ~ as.factor(Group))$p.value}))
colnames(non_param_kru) <- c("P.Value")
non_param_kru$adj.P.Val <- p.adjust(non_param_kru$P.Value, method = "fdr")
View(non_param_kru)
mylist <- split(data, df$Group)
data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data)[2] <- "Group"
mylist <- split(data, data$Group)
mylist
mylist1 <- as.data.frame(mylist[1])
View(mylist1)
mylist2 <- as.data.frame(mylist[2])
View(mylist2)
results_wil <- list()
for(i in 1:ncol(mylist1)){
results_wil[i] <- wilcox.test(mylist1[,i] ~ mylist2[,i], paired=TRUE)$p.value
}
non_param_wil <- as.data.frame(apply(data[,3:ncol(data)],2,function(x){wilcox.test(x ~ Group, paired=TRUE)$p.value}))
non_param_mann <- as.data.frame(apply(data[,3:ncol(data)],2,function(x){wilcox.test(x ~ as.factor(Group))$p.value}))
mylist <- split(data, data$Group)
mylist1 <- as.data.frame(mylist[1])
mylist2 <- as.data.frame(mylist[2])
results_wil <- list()
mylist2 <- mylist2[1:66,]
for(i in 1:ncol(mylist1)){
results_wil[i] <- wilcox.test(mylist1[,i] ~ mylist2[,i], paired=TRUE)$p.value
}
mylist1[,i]
mylist2[,i]
class(mylist2[,i])
for(i in 1:ncol(mylist1)){
x <- mylist1[,i]
y <- mylist2[,i]
results_wil[i] <- wilcox.test(x ~ y, paired=TRUE)$p.value
}
data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data)[2] <- "Group"
mylist <- split(data, data$Group)
mylist1 <- as.data.frame(mylist[1])
mylist2 <- as.data.frame(mylist[2])
names <- colnames(data)[3:ncol(data)]
colnames(mylist1)[3:ncol(mylist1)] <- names
colnames(mylist2)[3:ncol(mylist2)] <- names
results_wil <- list()
for(i in 1:ncol(mylist1)){
results_wil[i] <- wilcox.test(mylist1[,i] ~ mylist2[,i], paired=TRUE)$p.value
}
for(i in 3:ncol(mylist1)){
results_wil[i] <- wilcox.test(mylist1[,i] ~ mylist2[,i], paired=TRUE)$p.value
}
mylist1[,i]
mylist2[,i]
mylist2 <- mylist2[1:66,]
for(i in 3:ncol(mylist1)){
results_wil[i] <- wilcox.test(mylist1[,i] ~ mylist2[,i], paired=TRUE)$p.value
}
for(i in 3:ncol(mylist1)){
results_wil[i] <- wilcox.test(mylist1[,i] ~ mylist2[,i], paired=TRUE)$p.value
}
mylist1[,i]
mylist2[,i]
data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data)[2] <- "Group"
mylist <- split(data, data$Group)
mylist1 <- as.data.frame(mylist[1])
mylist2 <- as.data.frame(mylist[2])
names <- colnames(data)[3:ncol(data)]
colnames(mylist1)[3:ncol(mylist1)] <- names
colnames(mylist2)[3:ncol(mylist2)] <- names
results_wil <- list()
mylist2 <- mylist2[1:66,]
for(i in 3:ncol(mylist1)){
results_wil[i] <- wilcox.test(mylist1[,i] ~ mylist2[,i], paired=TRUE)$p.value
}
mylist1[,i]
mylist2[,i]
length(mylist1[,i])
length(mylist2[,i])
results_wil[i] <- wilcox.test(mylist1$Methyladenosine ~ mylist2$Methyladenosine, paired=TRUE)$p.value
wilcox.test(mylist1$Methyladenosine ~ mylist2$Methyladenosine, paired=TRUE)$p.value
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
& !df$FC > -(input$FCcut)
"Down-regulated"
runApp()
runApp()
runApp()
runApp()
runApp()
log2(1.5)
-log2(1.5)
runApp()
runApp()
data_uni <- read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
stat <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(p) <- c("P.Value")
p$adj.P.Val <- p.adjust(p$P.Value, method = "fdr")
G2 <- as.data.frame(apply(FUN=stat_G2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(G2) <- c("Mean G2")
G1 <- as.data.frame(apply(FUN=stat_G1, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(G1) <- c("Mean G1")
FC <- G2/G1
colnames(FC) <- c("FC")
FC <- round(as.numeric(FC$FC),4)
p <- cbind(G1,G2, FC, p)
a<-p
P.Value <- a[,4]
FC<-a[,3]
df <- data.frame(P.Value, FC)
View(df)
View(G1)
View(G2)
runApp()
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(p) <- c("P.Value")
p$adj.P.Val <- p.adjust(p$P.Value, method = "fdr")
G2 <- as.data.frame(apply(FUN=stat_G2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(G2) <- c("Mean G2")
G1 <- as.data.frame(apply(FUN=stat_G1, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(G1) <- c("Mean G1")
FC <- (G2/G1)-1
colnames(FC) <- c("FC")
FC <- round(as.numeric(FC$FC),4)
p <- cbind(G1,G2, FC, p)
a<-p
a <- Univ_analisis()$p
P.Value <- a[,4]
FC<-a[,3]
df <- data.frame(P.Value, FC)
log2(1.5)
log2(0.8)
runApp()
log2(0.2)
df <- mutate(df,threshold = ifelse(df$P.Value >= input$pcut,
yes = "none",
no = ifelse(df$FC < input$FCcut,
yes = ifelse(df$FC < -(input$FCcut),
yes = "Down-regulated",
no = "none"),
no = "Up-regulated")))
df <- mutate(df,threshold = ifelse(df$P.Value >= 0.05,
yes = "none",
no = ifelse(df$FC < 1.5,
yes = ifelse(df$FC < -(1.5),
yes = "Down-regulated",
no = "none"),
no = "Up-regulated")))
stat <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$p.value}
stat_G2 <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$estimate[[2]]}
stat_G1 <- function(x){t.test(x ~ unlist(data_uni[,2]),na.rm=TRUE, alternative=c("two.sided"))$estimate[[1]]}
p <- as.data.frame(apply(FUN=stat, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(p) <- c("P.Value")
p$adj.P.Val <- p.adjust(p$P.Value, method = "fdr")
G2 <- as.data.frame(apply(FUN=stat_G2, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(G2) <- c("Mean G2")
G1 <- as.data.frame(apply(FUN=stat_G1, MARGIN = 2, X = data_uni[,c(3:ncol(data_uni))] ))
colnames(G1) <- c("Mean G1")
FC <- G2/G1
colnames(FC) <- c("FC")
FC <- round(as.numeric(FC$FC),4)
p <- cbind(G1,G2, FC, p)
a<-p
a <- Univ_analisis()$p
P.Value <- a[,4]
FC<-a[,3]
df <- data.frame(P.Value, FC)
df <- mutate(df,threshold = ifelse(df$P.Value >= 0.05,
yes = "none",
no = ifelse(df$FC < 1.5,
yes = ifelse(df$FC < -(1.5),
yes = "Down-regulated",
no = "none"),
no = "Up-regulated")))
df <- mutate(df,threshold = as.factor(ifelse(df$P.Value >= 0.05,
yes = "none",
no = ifelse(df$FC < 1.5,
yes = ifelse(df$FC < -(1.5),
yes = "Down-regulated",
no = "none"),
no = "Up-regulated"))))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?shiny::box
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
