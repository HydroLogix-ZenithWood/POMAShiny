to_imp_data<-to_imp_data[,!supress]
runApp('Escritorio/POMA/POMA')
to_imp_data<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
to_imp_data <- to_imp_data[,apply(to_imp_data,2,function(x) !all(is.na(x)))]
View(to_imp_data)
colnames(to_imp_data)<-"Group"
to_imp_data<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
to_imp_data <- to_imp_data[,apply(to_imp_data,2,function(x) !all(is.na(x)))]
colnames(to_imp_data)[2]<-"Group"
count_NA <- aggregate(. ~ Group, data=to_imp_data,
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
supress <- (count_NA[1,] > (20) |
count_NA[2,] > (20))
to_imp_data<-to_imp_data[,!supress]
to_imp_data<-as.data.frame(to_imp_data[,!supress])
supress
supress <- data.frame(count_NA[1,] > (20) |
count_NA[2,] > (20))
to_imp_data<-to_imp_data[,!supress]
supress <- as.data.frame(count_NA[1,] > (20) |
count_NA[2,] > (20))
to_imp_data<-to_imp_data[,!supress]
supress <- c(count_NA[1,] > (20) |
count_NA[2,] > (20))
to_imp_data<-to_imp_data[,!supress]
to_imp_data<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
to_imp_data <- to_imp_data[,apply(to_imp_data,2,function(x) !all(is.na(x)))]
colnames(to_imp_data)[2]<-"Group"
count_NA <- aggregate(. ~ Group, data=to_imp_data,
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
########
supress <- c(count_NA[1,] > (20) |
count_NA[2,] > (20))
supress
count_NA
count_NA <- aggregate(.-ID ~ Group, data=to_imp_data,
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA <- aggregate(-ID ~ Group, data=to_imp_data,
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA
count_NA <- aggregate(.-ID ~ Group, data=to_imp_data,
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA <- aggregate(.- ID ~ Group, data=to_imp_data,
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
colnames(to_imp_data)[1]<-"ID"
count_NA <- aggregate(.-ID ~ Group, data=to_imp_data,
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
length(to_imp_data)
count_NA <- aggregate(. ~ Group, data=to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA
supress <- c(count_NA[1,] > (20) |
count_NA[2,] > (20))
to_imp_data<-to_imp_data[,!supress]
to_imp_data[,2:length(to_imp_data)]<-to_imp_data[,2:length(to_imp_data)][,!supress]
samples_groups<-to_imp_data[,1:2]
to_imp_data <-to_imp_data[,c(3:ncol(to_imp_data))]
depurdata<- to_imp_data
View(to_imp_data)
to_imp_data<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
to_imp_data <- to_imp_data[,apply(to_imp_data,2,function(x) !all(is.na(x)))]
colnames(to_imp_data)[2]<-"Group"
colnames(to_imp_data)[1]<-"ID"
samples_groups<-to_imp_data[,1:2]
count_NA <- aggregate(. ~ Group, data=to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
samples_groups
count_NA
supress <- c(count_NA[1,] > (20) |
count_NA[2,] > (20))
to_imp_data<-to_imp_data[,2:length(to_imp_data)][,!supress]
runApp('Escritorio/POMA/POMA')
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ fac1, data_uni)
trans_limma <- t(data_uni[,c(3:ncol(data_uni))]) # transposo la data
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = 1, sort.by = "p")
res <- as.data.frame(res)
res
runApp('Escritorio/POMA/POMA')
#############
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
noms <- colnames(data_cof)[2:(length(covariate_uni))]
noms <- paste(as.character(noms),collapse=" + ", sep="")
noms <- paste(as.character(colnames(data_uni)[2]), noms, sep=" + ")
noms <- paste(" ~ ", noms, sep="")
noms <- as.formula(noms)
noms
initialmodel <- model.matrix( noms , data_cof)
fac1
data_uni
View(data_uni)
pol<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(pol)<-gsub("(A-z[::punct::])","",colnames(pol))
View(pol)
colnames(pol)<-gsub("(^","",colnames(pol))
colnames(pol)<-gsub("(.","",colnames(pol))
pol<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(pol)<-gsub("\\s*\\([^\\)]+\\)","",colnames(pol))
View(pol)
write_csv(pol, "/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv" )
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
#############
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
noms <- colnames(data_cof)[2:(length(covariate_uni))]
noms <- paste(as.character(noms),collapse=" + ", sep="")
noms <- paste(as.character(colnames(data_uni)[2]), noms, sep=" + ")
noms <- paste(" ~ ", noms, sep="")
noms <- as.formula(noms)
initialmodel <- model.matrix( noms , data_cof)
trans_limma <- t(data_uni[,c(3:ncol(data_uni))]) # transposo la data
noms
noms
noms <- colnames(data_cof)[2:(length(covariate_uni))]
noms
data_cof
?merge
noms <- colnames(data_cof)[length(data_cof)-length(covariate_uni):(length(covariate_uni))]
noms
length(data_cof)-length(covariate_uni)
(length(covariate_uni)
)
length(data_cof)
noms <- colnames(data_cof)[length(data_cof)-length(covariate_uni):length(data_cof)]
noms
noms <- paste(as.character(noms),collapse=" + ", sep="")
noms
runApp('Escritorio/POMA/POMA')
#############
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
noms <- colnames(data_cof)[3:length(data_cof)-length(covariate_uni)]
length(data_cof)
length(data_cof)-length(covariate_uni)
noms <- colnames(data_cof)[3:(length(data_cof)-length(covariate_uni))]
noms
noms <- paste(as.character(noms),collapse=" + ", sep="")
noms
colnames(data_uni)[2])
colnames(data_uni)[2]
noms <- colnames(data_cof)[2:(length(data_cof)-length(covariate_uni))]
noms <- paste(as.character(noms),collapse=" + ", sep="")
noms
noms <- as.formula(noms)
#noms <- paste(as.character(colnames(data_uni)[2]), noms, sep=" + ")
noms <- paste(" ~ ", noms, sep="")
noms <- as.formula(noms)
#noms <- paste(as.character(colnames(data_uni)[2]), noms, sep=" + ")
noms <- paste(" ~ ", noms, sep="")
noms
noms <- colnames(data_cof)[2:(length(data_cof)-length(covariate_uni))]
noms <- paste(as.character(noms),collapse=" + ", sep="")
#noms <- paste(as.character(colnames(data_uni)[2]), noms, sep=" + ")
#noms <- paste(" ~ ", noms, sep="")
noms <- as.formula(noms)
noms
#noms <- paste(as.character(colnames(data_uni)[2]), noms, sep=" + ")
noms <- paste(" ~ ", noms, sep="")
noms
noms <- as.formula(noms)
initialmodel <- model.matrix( ~ fac1, data_uni)
initialmodel
View(data_cof)
initialmodel <- model.matrix( .-ID ~ fac1, data_uni)
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( .-ID ~ fac1, data_uni)
runApp('Escritorio/POMA/POMA')
#############
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
covariate_uni<-as.factor(covariate_uni)
covariate_uni<-as.factor(as.character(covariate_uni))
covariate_uni
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
initialmodel <- model.matrix( ~ fac1, data_cof)
trans_limma <- t(data_cof[,c(3:ncol(data_cof))]) # transposo la data
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res2 <- topTable(modelstats, number= ncol(data_cof) , coef = 1, sort.by = "p")
res2 <- as.data.frame(res2)
pol2<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
View(pol2)
pol2<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
pol2$Gender<-gsub("M","1",pol2$Gender)
pol2$Gender<-gsub("F","2",pol2$Gender)
pol2$Smoking_condition<-gsub("Some days","1",pol2$Smoking_condition)
pol2$Smoking_condition<-gsub("Non-smoker","2",pol2$Smoking_condition)
pol2$Smoking_condition<-gsub("Everyday","3",pol2$Smoking_condition)
pol2$Drink_Alcohol<-gsub("Sometimes","1",pol2$Drink_Alcohol)
pol2$Drink_Alcohol<-gsub("At least 1 drink/day","2",pol2$Drink_Alcohol)
pol2$Drink_Alcohol<-gsub("No alcohol","3",pol2$Drink_Alcohol)
write_csv(pol2, "/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv" )
runApp('Escritorio/POMA/POMA')
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ fac1, data_uni)
trans_limma <- t(data_uni[,c(3:ncol(data_uni))]) # transposo la data
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = 1, sort.by = "p")
res <- as.data.frame(res)
#############
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
covariate_uni<-as.factor(as.character(covariate_uni))
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
#############
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
initialmodel <- model.matrix( ~ fac1, data_cof)
trans_limma <- t(data_cof[,c(3:ncol(data_cof))]) # transposo la data
model <- lmFit(trans_limma, initialmodel)
initialmodel
data_cof
runApp('Escritorio/POMA/POMA')
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ fac1, data_uni)
trans_limma <- t(data_uni[,c(3:ncol(data_uni))]) # transposo la data
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = 1, sort.by = "p")
res <- as.data.frame(res)
#############
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
initialmodel2 <- model.matrix( ~ fac1, data_cof)
trans_limma2 <- t(data_cof[,c(3:ncol(data_cof))]) # transposo la data
model2 <- lmFit(trans_limma2, initialmodel2)
model
model2
trans_limma
View(trans_limma)
View(trans_limma2)
View(trans_limma2)
View(trans_limma2)
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
cat(colnames(covariate_uni)
)
paste0(cat(colnames(covariate_uni)[2:ncol(covariate_uni)]),sep = "+")
paste0(cat(colnames(covariate_uni)[2:ncol(covariate_uni)]), collapse = "+")
cat(colnames(covariate_uni)[2:ncol(covariate_uni)], sep = "+")
initialmodel2 <- model.matrix( ~ fac1 + cat(colnames(covariate_uni)[2:ncol(covariate_uni)], sep = "+"), data_cof)
initialmodel2 <- model.matrix( ~ fac1 + paste(cat(colnames(covariate_uni)[2:ncol(covariate_uni)], sep = "+")), data_cof)
paste(cat(colnames(covariate_uni)[2:ncol(covariate_uni)], sep = "+"))
paste0(cat(colnames(covariate_uni)[2:ncol(covariate_uni)], sep = "+"))
paste0(cat(colnames(covariate_uni)[2:ncol(covariate_uni)], sep = " + "))
initialmodel2 <- model.matrix( ~ fac1 + as.character(paste0(cat(colnames(covariate_uni)[2:ncol(covariate_uni)], sep = " + "))), data_cof)
initialmodel2 <- model.matrix( ~ fac1 + as.character(paste0(colnames(covariate_uni)[2:ncol(covariate_uni)], collapse = " + ")), data_cof)
paste0(colnames(covariate_uni)[2:ncol(covariate_uni)], collapse = " + "))
paste0(colnames(covariate_uni)[2:ncol(covariate_uni)], collapse = " + ")
initialmodel2 <- model.matrix( ~ paste0( "fac1 + ", colnames(covariate_uni)[2:ncol(covariate_uni)], collapse = " + "), data_cof)
initialmodel2 <- model.matrix( ~ paste0("fac1 + ", paste(colnames(covariate_uni)[2:ncol(covariate_uni)], collapse = " + ")), data_cof)
initialmodel2 <- model.matrix( ~ fac1, data_cof)
initialmodel2 <- model.matrix( ~ fac1 + paste(colnames(covariate_uni)[2:ncol(covariate_uni)], collapse = " + "), data_cof)
initialmodel2 <- model.matrix( ~ as.formula(fac1 + paste(colnames(covariate_uni)[2:ncol(covariate_uni)], collapse = " + ")), data_cof)
initialmodel2 <- model.matrix( ~ fac1 + AgeatConsent, data_cof)
initialmodel2 <- model.matrix( ~ fac1 + covariate_uni$AgeatConsent, data_cof)
covariate_uni$AgeatConsent
initialmodel2 <- model.matrix( ~ fac1 + covariate_uni$AgeatConsent, data_cof)
trans_limma2 <- t(data_cof[,c(3:ncol(data_uni))]) # transposo la data
model2 <- lmFit(trans_limma2, initialmodel2)
trans_limma2 <- t(data_cof[,c(3:ncol(data_cof))]) # transposo la data
model2 <- lmFit(trans_limma2, initialmodel2)
trans_limma2
#############
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ fac1, data_uni)
trans_limma <- t(data_uni[,c(3:ncol(data_uni))]) # transposo la data
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = 1, sort.by = "p")
res <- as.data.frame(res)
#############
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
covariate_uni<-covariate_uni[,1:2]
data_cof <- merge(data_uni, covariate_uni, by.x=colnames(data_uni)[1], by.y=colnames(covariate_uni)[1])
initialmodel2 <- model.matrix( ~ fac1 + covariate_uni$AgeatConsent, data_cof)
trans_limma2 <- t(data_cof[,c(3:ncol(data_cof))]) # transposo la data
model2 <- lmFit(trans_limma2, initialmodel2)
initialmodel2
initialmodel2 <- model.matrix( ~ fac1 + covariate_uni$AgeatConsent, data_uni)
trans_limma2 <- t(data_uni[,c(3:ncol(data_uni))]) # transposo la data
model2 <- lmFit(trans_limma2, initialmodel2)
modelstats2 <- eBayes(model2)
initialmodel2 <- model.matrix( ~ fac1 + covariate_uni[,2], data_uni)
initialmodel2 <- model.matrix( ~ fac1 + covariate_uni[2], data_uni)
initialmodel2 <- model.matrix( ~ fac1 + covariate_uni$AgeatConsent, data_uni)
#############
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
initialmodel2 <- model.matrix( ~ fac1 + covariate_uni[$AgeatConsent],2, data_uni)
initialmodel2 <- model.matrix( ~ fac1 + covariate_uni[,2], data_uni)
for i in 2:ncol(covariate_uni){
paste("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
for i in 2:ncol(covariate_uni){
paste("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
i
covariate_uni
for i in 2:ncol(covariate_uni){
names <- paste("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
i<- 5
paste("covariate_uni$", colnames(covariate_uni)[i],sep="")
names<-NULL
for i in 2:ncol(covariate_uni){
names <- paste("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
for i in 2:ncol(covariate_uni){
names[i] <- paste("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
names<-list()
for i in 2:ncol(covariate_uni){
names[i] <- paste("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
for i in 2:ncol(covariate_uni){
names[i] <- paste0("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
for i in 2:ncol(covariate_uni){
names[i] <- paste0("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
for (i in 2:ncol(covariate_uni)){
names[i] <- paste0("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
names<-list()
for (i in 2:ncol(covariate_uni)){
names[i] <- paste0("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
names
names<-NULL
for (i in 2:ncol(covariate_uni)){
names[i] <- paste0("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
names
names<-NULL
for (i in 1:ncol(covariate_uni)){
names[i] <- paste0("covariate_uni$", colnames(covariate_uni)[i],sep="")
}
names
initialmodel2 <- model.matrix( ~ fac1 + paste(cat(names), collapse = "+"), data_uni)
paste(cat(names), collapse = "+")
paste(cat(names, sep = "+"))
paste(names, sep = "+")
paste(names, collapse = "+")
cat(paste(names, collapse = "+"))
initialmodel2 <- model.matrix( ~ fac1 + cat(paste(names, collapse = "+")), data_uni)
pol<-cat(paste(names, collapse = "+"))
initialmodel2 <- model.matrix( ~ fac1 + pol, data_uni)
pol
initialmodel2 <- model.matrix( ~ fac1 + paste(names, collapse = "+"), data_uni)
names
initialmodel2 <- model.matrix( ~ fac1 + paste(names[2:length(names)], collapse = "+"), data_uni)
paste(names[2:length(names)], collapse = "+")
paste(names[2:length(names)], collapse = " + ")
paste("~ fac1", names[2:length(names)], collapse = " + ")
paste0("~ fac1", names[2:length(names)], collapse = " + ")
paste("~ fac1 + ", names[2:length(names)], collapse = " + ")
paste("~ fac1 +", names[2:length(names)], collapse = " + ")
shiny::runApp('Escritorio/POMA/POMA')
load("QuickStartExample.RData")
library(glmnet)
load("QuickStartExample.RData")
data("QuickStartExample.RData")
data("QuickStartExample")
QuickStartExample
library(glmnet)
library(glmnet)
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
covariate_uni<-read_csv("/home/pol/Escritorio/ST000284/COV_CRC_ST000284.csv")
?glmnet
X <- as.matrix(data_uni[,3:ncol(data_uni)])
Y <- as.factor(data_uni$Group)
par(mar=c(5,6,4,2))
fit <- glmnet(X,Y)
Y
fit <- glmnet(X,Y, family = "multinomial")
lassoPlot<-plot(fit, xvar="norm",cex.lab=1.3, cex.axis=1.2)
fit
fit$a0
fit$dfmat
fit$beta
fit$beta$C
View(MASS)
data(MASS)
library(MASS)
View(MASS)
data(MASS)
# Load libraries
library(MASS)
library(reshape)
library(psych)
library(ggplot2)
# Get data
data <-read.csv(file = "Masked")
# Load libraries
library(MASS)
library(reshape)
library(psych)
library(ggplot2)
# Get data
data <-read.csv(file = "Masked")
# Get data
data <-read.csv(file = "Masked", package = "MASS")
MASSç
MASS
# Get data
data <- data_uni[,-1:2]
# Get data
data <- data_uni[,-c(1:2)]
# Prepare data
X<-data
X <-scale(X, center = TRUE, scale = TRUE)
response<- data[,10]
response <-scale(reponse, center = TRUE, scale = FALSE)
response<- data[data_uni,2]
response<- data_uni$Group
response <-scale(reponse, center = TRUE, scale = FALSE)
response
data
# Get ridge solution for every lambda
betas <-matrix(rep(NA), nrow = 7, ncol = 100)
rownames(betas) <-colnames(X)
lambda <-1:100
betas <-lapply(1:length(lambda),
FUN = function(i) {
return(solve(t(X)%*%X + diag(x = lambda[i],
ncol(X)) )%*%t(X)%*%response)
})
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
x <- as.matrix(data_uni[,3:ncol(data_uni)])
y <- as.factor(data_uni$Group)
library(lars)
install.packages("lars")
fit <- lars(x,y,type="lasso")
library(lars)
fit <- lars(x,y,type="lasso")
######################
tmp <- cor(data_uni[,3:ncol(data_uni)])
tmp[!lower.tri(tmp)] <- 0
data.new <- data[,!apply(tmp,2,function(x) any(x > 0.99))]
head(data.new)
data_new <- data[,!apply(tmp,2,function(x) any(x > 0.99))]
x <- as.matrix(data_new)
y <- as.factor(data_uni$Group)
library(lars)
fit <- lars(x,y,type="lasso")
data_new <- data[,!apply(tmp,2,function(x) any(x > 0.8))]
head(data.new)
x <- as.matrix(data_new)
y <- as.factor(data_uni$Group)
library(lars)
fit <- lars(x,y,type="lasso")
######################
tmp <- cor(data_uni[,3:ncol(data_uni)])
tmp
tmp[!lower.tri(tmp)] <- 0
tmp
?lower.tri
View(tmp)
data_uni<-read_csv("/home/pol/Escritorio/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2]<-"Group"
colnames(data_uni)[1]<-"ID"
######################
tmp <- cor(data_uni[,3:ncol(data_uni)])
tmp[!lower.tri(tmp)] <- 0
data_new <- data[,!apply(tmp,2,function(x) any(x > 0.99))]
head(data.new)
x <- as.matrix(data_new)
y <- as.factor(data_uni$Group)
library(lars)
fit <- lars(x,y,type="lasso")
data_new <- data[,!apply(tmp,2,function(x) any(x > 0.3))]
head(data_new)
x <- as.matrix(data_new)
y <- as.factor(data_uni$Group)
library(lars)
fit <- lars(x,y,type="lasso")
?lars
.Machine$double.eps
fit <- lars(x,y,type="lasso",eps = 0)
fit <- lars(x,y,type="lasso", eps = 1)
Cmax
runApp('Escritorio/POMA/POMA')
