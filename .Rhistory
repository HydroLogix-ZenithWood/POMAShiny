data_uni <- readr::read_csv("/home/pol/Escritorio/test.csv")
data_uni <- data_uni[1:100,]
colnames(data_uni)[2] <- "Group"
contrasts <- as.factor(levels(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts(com_names[1], levels = initialmodel)
com_names
contrasts <- as.factor(levels(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
combinations
contrasts <- as.factor(levels(data_uni$Group))
contrasts
data_uni <- readr::read_csv("/home/pol/Escritorio/test.csv")
data_uni <- data_uni[1:100,]
colnames(data_uni)[2] <- "Group"
View(data_uni)
contrasts <- as.factor(levels(data_uni$Group))
contrasts
data_uni$Group
levels(data_uni$Group)
as.factor(levels(data_uni$Group))
contrasts <- levels(as.factor(data_uni$Group))
contrasts
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts(com_names[1], levels = initialmodel)
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
model <- contrasts.fit(model, cont.matrix)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = 1,
sort.by = "p")
View(res)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
cont.matrix <- makeContrasts(com_names[1:2], levels = initialmodel)
data_uni <- readr::read_csv("/home/pol/Escritorio/test.csv")
data_uni <- data_uni[1:100,]
#data_uni <- data.frame(cbind(id = seq(1:150), iris[1:150,c(5,1:4)]))
covariate_uni <- MASS::Boston[1:100,5:10]
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts(com_names[1:2], levels = initialmodel)
cont.matrix
cont.matrix <- makeContrasts(com_names[1], levels = initialmodel)
cont.matrix
cont.matrix <- makeContrasts(com_names[2], levels = initialmodel)
cont.matrix
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
cont.matrix <- makeContrasts(setosa-virginica, levels = initialmodel)
cont.matrix <- makeContrasts("setosa-virginica", levels = initialmodel)
data_uni <- readr::read_csv("/home/pol/Escritorio/test.csv")
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts("setosa-virginica", levels = initialmodel)
cont.matrix
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
data_uni <- readr::read_csv("/Users/pol/Dropbox/Shiny_apps/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
com_names <- as.vector(com_names)
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
com_names <- as.vector(com_names)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts("C-H", levels = initialmodel)
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
model <- contrasts.fit(model, cont.matrix)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = 1,
sort.by = "p")
View(res)
cont.matrix
cont.matrix <- makeContrasts(com_names[1], levels = initialmodel)
com_names[1]
com_names
res <- topTable(modelstats, number = ncol(data_uni) , coef = com_names[1],
sort.by = "p")
runApp()
eval(parse(text = "pol"))
pol<-"pol"
eval(parse(text = "pol"))
eval(parse(text = pol))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
com_names[com_names == Coef]
Coef <- "C-H"
com_names[com_names == Coef]
Coef <- "C-P"
com_names[com_names == Coef]
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
com_names
data_uni <- readr::read_csv("/Users/pol/Dropbox/Shiny_apps/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
##########
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
com_names
Coef <- as.character("C-H")
com_names <- relevel(com_names, ref = Coef)
com_names <- relevel(as.factor(com_names), ref = Coef)
com_names
runApp()
runApp()
as.factor(eval(parse(text = Coef)))
Coef
com_names
com_names <- relevel(as.factor(com_names), ref = noquote(eval(parse(text = Coef))))
noquote(eval(parse(text = Coef)))
Coef
com_names
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
samples_groups<-to_imp_data[,1:2]
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
colnames(to_imp_data)[2] <- "Group"
samples_groups<-to_imp_data[,1:2]
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA
View(count_NA)
runApp()
supress <- c(count_NA > (input$value_remove))
supress <- c(count_NA > (20)
)
supress
supress <- which(count_NA > 20)
supress
?lag
supress <- which(count_NA > 20, arr.ind=T )
supress
supress <- which(count_NA > 20, arr.ind=TRUE )
View(supress)
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
samples_groups<-to_imp_data[,1:2]
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
to_imp_data$Methyladenosine[1:50] <-NA
to_imp_data$Deoxyuridine[50:100] <-NA
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
to_imp_data$Methyladenosine[1:50] <-NA
to_imp_data$Deoxyuridine[50:100] <-NA
samples_groups<-to_imp_data[,1:2]
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
supress <- which(count_NA > 20, arr.ind=TRUE )
supress
to_imp_data<-to_imp_data[,2:length(to_imp_data)][,!supress]
all(count_NA > 20)
lapply(count_NA, function(x) all(x > 20))
supress <- c(lapply(count_NA, function(x) all(x > 20)));supress
supress <- data_frame(lapply(count_NA, function(x) all(x > 20)));supress
View(supress)
supress <- data_frame(t(lapply(count_NA, function(x) all(x > 20))));supress
supress <- as.data.frame(t(lapply(count_NA, function(x) all(x > 20))));supress
View(supress)
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
runApp()
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
to_imp_data$Methyladenosine[1:50] <-NA
to_imp_data$Deoxyuridine[50:100] <-NA
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
supress <- as.data.frame(t(lapply(count_NA, function(x) all(x > 20))))
to_imp_data<-to_imp_data[,2:length(to_imp_data)][,!supress]
to_imp_data<-to_imp_data[,2:length(to_imp_data)][!supress]
View(to_imp_data)
supress <- c(t(lapply(count_NA, function(x) all(x > 20))))
to_imp_data <- to_imp_data[,2:length(to_imp_data)][,!supress]
supress
supress <- as.data.frame(t(lapply(count_NA, function(x) all(x > 20))))
to_imp_data <- to_imp_data[,2:length(to_imp_data)][supress]
View(supress)
supress <- as.vector(t(lapply(count_NA, function(x) all(x > 20))))
supress
to_imp_data <- to_imp_data[,2:length(to_imp_data)][!supress]
to_imp_data <- to_imp_data[,2:length(to_imp_data)][,!supress]
supress
View(supress)
supress <- c(supress)
to_imp_data <- to_imp_data[,2:length(to_imp_data)][supress]
supress
supress <- as.data.frame(lapply(count_NA, function(x) all(x > 20)))
View(supress)
to_imp_data <- to_imp_data[,2:length(to_imp_data)][!,supress]
to_imp_data <- to_imp_data[,2:length(to_imp_data)][,!supress]
supress <- c(supress[1,])
supress
supress <- unlist(supress)
to_imp_data <- to_imp_data[,2:length(to_imp_data)][,!supress]
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
to_imp_data$Methyladenosine[1:50] <-NA
to_imp_data$Deoxyuridine[50:100] <-NA
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
supress <- as.data.frame(lapply(count_NA, function(x) all(x > 20)))
supress <- unlist(supress)
supress
to_imp_data <- to_imp_data[,2:length(to_imp_data)][!supress]
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
to_imp_data$Methyladenosine[1:50] <-NA
to_imp_data$Deoxyuridine[50:100] <-NA
count_NA <- aggregate(. ~ Group, data = to_imp_data[,2:length(to_imp_data)],
function(x) {100*(sum(is.na(x))/(sum(is.na(x))+sum(!is.na(x))))},
na.action = NULL)
count_NA$Group <- NULL
supress <- as.data.frame(lapply(count_NA, function(x) all(x > 20)))
supress <- unlist(supress)
to_imp_data <- to_imp_data[,3:length(to_imp_data)][!supress]
View(to_imp_data)
to_imp_data <- to_imp_data[,3:length(to_imp_data)][,!supress]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
to_imp_data <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(to_imp_data)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
data_uni <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
com_names <- as.vector(Limma()$com_names)
initialmodel <- model.matrix( ~ 0 + fac1)
data_uni <- readr::read_csv("/home/pol/Escritorio/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
com_names <- as.vector(com_names)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts(com_names[1],
levels = initialmodel)
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
model <- contrasts.fit(model, cont.matrix)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) ,
coef = 1,
sort.by = "p")
res <- topTable(modelstats, number = ncol(data_uni) ,
coef = com_names[1],
sort.by = "p")
runApp()
runApp()
runApp()
runApp()
runApp()
com_names
Coef <- as.character("C-H")
com_names <- relevel(as.factor(com_names), ref = as.factor(Coef));com_names
com_names <- relevel(as.factor(com_names), ref = Coef);com_names
runApp()
paste0('"', Coef, '"')
paste0('\"', Coef, '\"')
paste0('\."', Coef, '\."')
paste0('//."', Coef, '//."')
paste0('//"', Coef, '//"')
paste0('\\"', Coef, '\\"')
Coef
com_names
as.factor(as.character(com_names))
as.factor(as.character(com_names[1]))
com_names
data_uni <- iris[,c(5,1:4)]
data_uni <- cbind(ID=seq(1:150, data_uni))
colnames(data_uni)[2] <- "Group"
data_uni <- iris[,c(5,1:4)]
data_uni <- cbind(ID=seq(1:150), data_uni)
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
com_names <- as.vector(com_names)
com_names
Coef <- as.character("setosa-virginica")
com_names <- relevel(as.factor(com_names), ref = Coef);com_names
com_names <- data.frame(relevel(as.factor(com_names), ref = Coef));com_names
com_names <- data.frame(relevel(as.factor(com_names$relevel.as.factor.com_names...ref...Coef.), ref = Coef));com_names
com_names <- data.frame(relevel(com_names$relevel.as.factor.com_names...ref...Coef., ref = Coef));com_names
which(com_names == Coef)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
com_names
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
data_uni <- readr::read_csv("/Users/pol/Dropbox/Shiny_apps/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
com_names
com_names[1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
data_uni <- readr::read_csv("/Users/pol/Dropbox/Shiny_apps/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
com_names <- data.frame(comparisons = com_names)
View(com_names)
runApp()
runApp()
com_names <- NULL
com_names <- c()
runApp()
com_names <- c(NULL)
runApp()
write.csv(iris,"/Users/pol/Desktop/iris.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?makeContrasts
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_uni <- readr::read_csv("/Users/pol/Dropbox/Shiny_apps/POMA/ST000284/MET_CRC_ST000284.csv")
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
environment(com_names)
com_names
com_names
ls(com_names)
com_names
