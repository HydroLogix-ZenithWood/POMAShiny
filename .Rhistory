View(data_uni)
covariate_uni <- MASS::Boston[1:150,4:10]
View(covariate_uni)
covariate_uni <- MASS::Boston[1:150,5:10]
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
contrasts <- as.factor(levels(fac1))
initialmodel <- model.matrix( ~ fac1)
colnames(initialmodel) <- contrasts
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = input$coef_limma,
sort.by = "p")
res <- topTable(modelstats, number = ncol(data_uni) , coef = 1,
sort.by = "p")
metabolite_name <- rownames(res)
logFC <- round(res$logFC,3)
AveExpr <- round(res$AveExpr,3)
t <- round(res$t,3)
B <- round(res$B,3)
P.Value <- res$P.Value
adj.P.Val <- res$adj.P.Val
res <- as.data.frame(cbind(logFC, AveExpr, t, B, P.Value, adj.P.Val))
rownames(res) <- metabolite_name
View(res)
res2 <- topTable(modelstats, number = ncol(data_uni) , coef = 2,
sort.by = "p")
View(res2)
res2 <- topTable(modelstats, number = ncol(data_uni) , coef = 3,
sort.by = "p")
res2 <- topTable(modelstats, number = ncol(data_uni) , coef = 2,
sort.by = "p")
res3 <- topTable(modelstats, number = ncol(data_uni) , coef = 3,
sort.by = "p")
View(res3)
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = 4,
sort.by = "p")
initialmodel
form <- as.formula(noquote(paste("~ fac1 + ", paste(colnames(covariate_uni)[2:length(covariate_uni)],
collapse = " + ", sep=""), sep = "")))
form
initialmodel2 <- model.matrix(form)
initialmodel2 <- model.matrix(form , covariate_uni)
initialmodel2
trans_limma2 <- t(data_uni[,c(3:ncol(data_uni))]) # transposo la data
model2 <- lmFit(trans_limma2, initialmodel2)
modelstats2 <- eBayes(model2)
res4 <- topTable(modelstats2, number= ncol(data_uni) , coef = 1,
sort.by = "p")
res5 <- topTable(modelstats2, number= ncol(data_uni) , coef = 2,
sort.by = "p")
res6 <- topTable(modelstats2, number= ncol(data_uni) , coef = 3,
sort.by = "p")
View(res4)
View(res5)
View(res6)
res7 <- topTable(modelstats2, number= ncol(data_uni) , coef = 4,
sort.by = "p")
data_uni <- cbind(id = seq(1:100), iris[,c(5,1:4)])
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
contrasts <- as.factor(levels(fac1))
initialmodel <- model.matrix( ~ fac1)
colnames(initialmodel) <- contrasts
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = 2,
sort.by = "p")
View(res4)
model
model$design
attr(,"contrasts")$fac1
attr(model,"contrasts")$fac1
data_uni <- cbind(id = seq(1:150), iris[,c(5,1:4)])
covariate_uni <- MASS::Boston[1:150,5:10]
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
contrasts <- as.factor(levels(fac1))
initialmodel <- model.matrix( ~ fac1)
colnames(initialmodel) <- contrasts
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = 4,
sort.by = "p")
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = 3,
sort.by = "p")
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = 0,
sort.by = "p")
runApp()
data_uni <- cbind(id = seq(1:150), iris[,c(5,1:4)])
covariate_uni <- MASS::Boston[1:150,5:10]
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
contrasts <- as.factor(levels(fac1))
initialmodel <- model.matrix( ~ fac1)
colnames(initialmodel) <- contrasts
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
model$coefficients
model$assign
model$cov.coefficients
?lmFit
modelstats <- eBayes(model)
modelstats$coefficients
modelstats$qr$qr
modelstats$design
colnames(model)
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = "setosavsversicolor",
sort.by = "p")
data_uni <- cbind(id = seq(1:150), iris[,c(5,1:4)])
covariate_uni <- MASS::Boston[1:150,5:10]
colnames(data_uni)[2] <- "Group"
###
fac1 <- as.factor(data_uni$Group)
contrasts <- as.factor(levels(fac1))
initialmodel <- model.matrix( ~ fac1)
colnames(initialmodel) <- contrasts
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = "setosavsversicolor",
sort.by = "p")
initialmodel
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = "versicolor-virginica",
sort.by = "p")
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = versicolor-virginica,
sort.by = "p")
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = versicolorvsvirginica,
sort.by = "p")
data_uni <- cbind(id = seq(1:150), iris[,c(5,1:4)])
covariate_uni <- MASS::Boston[1:150,5:10]
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
contrasts <- as.factor(levels(fac1))
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
initialmodel
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = 0,
sort.by = "p")
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = 4,
sort.by = "p")
res4 <- topTable(modelstats, number = ncol(data_uni) , coef = 3,
sort.by = "p")
data_uni <- cbind(id = seq(1:150), iris[,c(5,1:4)])
covariate_uni <- MASS::Boston[1:150,5:10]
colnames(data_uni)[2] <- "Group"
###
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
contrasts <- as.factor(levels(fac1))
colnames(initialmodel) <- contrasts
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = 1, sort.by = "p")
View(res)
data_uni <- cbind(id = seq(1:150), iris[,c(5,1:4)])
covariate_uni <- MASS::Boston[1:150,5:10]
colnames(data_uni)[2] <- "Group"
###
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
initialmodel
contrasts <- as.factor(levels(fac1))
colnames(initialmodel) <- contrasts
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = 3, sort.by = "p")
form <- as.formula(noquote(paste("~ 0 + fac1 + ", paste(colnames(covariate_uni)[2:length(covariate_uni)],
collapse = " + ", sep=""), sep = "")))
res <- topTable(modelstats, number = ncol(data_uni) , coef = 2, sort.by = "p")
data_uni <- cbind(id = seq(1:90), iris[,c(5,1:4)])
covariate_uni <- MASS::Boston[1:150,5:10]
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
contrasts <- as.factor(levels(fac1))
colnames(initialmodel) <- contrasts
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = 2, sort.by = "p")
res <- topTable(modelstats, number = ncol(data_uni) , coef = 3, sort.by = "p")
makeContrasts( "E10-e10", "E48-e48", levels= initialmodel)
data_uni <- cbind(id = seq(1:150), iris[,c(5,1:4)])
covariate_uni <- MASS::Boston[1:150,5:10]
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
contrasts <- as.factor(levels(fac1))
colnames(initialmodel) <- contrasts
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
modelstats <- eBayes(model)
makeContrasts("setosa-virginica", "setosa-versicolor", "versicolor-virginica", levels= initialmodel)
contrasts
combn(contrasts)
combn(contrasts, 5)
combn(contrasts, 3)
expand.grid(contrasts)
contrasts <- c("pol","nicola","raul")
expand.grid(contrasts)
lapply(contrasts, function(x) MyIntToBit(x,3))
MyIntToBit <- function(x, dig) {
i <- 0L
string <- numeric(dig)
while (x > 0) {
string[dig - i] <- x %% 2L
x <- x %/% 2L
i <- i + 1L
}
string
}
lapply(contrasts, function(x) MyIntToBit(x,3))
contrasts <- c("pol","nicola","raul")
expand.grid(contrasts)
require(utils)
expand.grid(height = seq(60, 80, 5), weight = seq(100, 300, 50),
sex = c("Male","Female"))
x <- seq(0, 10, length.out = 100)
y <- seq(-1, 1, length.out = 20)
d1 <- expand.grid(x = x, y = y)
d2 <- expand.grid(x = x, y = y, KEEP.OUT.ATTRS = FALSE)
object.size(d1) - object.size(d2)
expand.grid(contrasts)
x <- seq(0, 10, length.out = 100)
y <- seq(-1, 1, length.out = 20)
d1 <- expand.grid(x = x, y = y)
d2 <- expand.grid(x = x, y = y, KEEP.OUT.ATTRS = FALSE)
object.size(d1) - object.size(d2)
expand.grid(contrasts)
expand.grid(1:9)
expand.grid(contrasts,contrasts)
expand.grid(contrasts, contrasts)
combinations <- expand.grid(contrasts, contrasts)
contrasts <- c("pol","nicola","raul")
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2 | combinations$Var2 == combinations$Var2),]
combinations
contrasts <- c("pol","nicola","raul")
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations
contrasts <- c("pol","nicola","raul")
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2 & combinations$Var2 == combinations$Var2),]
combinations
data_uni <- cbind(id = seq(1:150), iris[,c(5,1:4)])
covariate_uni <- MASS::Boston[1:150,5:10]
colnames(data_uni)[2] <- "Group"
###
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
contrasts <- as.factor(levels(fac1))
colnames(initialmodel) <- contrasts
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2 & combinations$Var2 == combinations$Var2),]
combinations
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2 & combinations$Var2 == combinations$Var1),]
combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2 | combinations$Var2 == combinations$Var1),]; combinations
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2 | combinations$Var2 == combinations$Var1),]; combinations
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]; combinations
combinations <- expand.grid(contrasts, contrasts)
combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]; combinations
combinations <- combinations[,order(combinations$Var1)]; combinations
combinations <- combinations[order(combinations$Var1),]; combinations
combinations <- combinations[c(1:(nrow(combinations)/2)),]; combinations
data_uni <- cbind(id = seq(1:100), iris[,c(5,1:4)])
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
contrasts <- as.factor(levels(fac1))
colnames(initialmodel) <- contrasts
combinations <- expand.grid(contrasts, contrasts); combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]; combinations
combinations <- combinations[order(combinations$Var1),]; combinations
combinations <- combinations[c(1:(nrow(combinations)/2)),]; combinations
data_uni <- cbind(id = seq(1:150), iris[1:100,c(5,1:4)])
data_uni <- cbind(id = seq(1:100), iris[1:100,c(5,1:4)])
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
contrasts <- as.factor(levels(fac1))
colnames(initialmodel) <- contrasts
combinations <- expand.grid(contrasts, contrasts); combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]; combinations
combinations <- combinations[order(combinations$Var1),]; combinations
combinations <- combinations[c(1:(nrow(combinations)/2)),]; combinations
View(data_uni)
fac1 <- as.factor(data_uni$Group)
fac1
initialmodel <- model.matrix( ~ 0 + fac1)
contrasts <- as.factor(levels(fac1))
colnames(initialmodel) <- contrasts
contrasts
fac1
fac1 <- as.factor(data_uni$Group)
data_uni <- cbind(id = seq(1:100), iris[1:100,c(5,1:4)])
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
data_uni <- data.frame(cbind(id = seq(1:100), iris[1:100,c(5,1:4)]))
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
data_uni <- data.frame(cbind(id = seq(1:100), iris[1:100,c(5,1:4)]))
covariate_uni <- MASS::Boston[1:100,5:10]
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
data_uni$Group
data_uni <- readr::read_csv("/home/pol/Escritorio/test.csv")
View(data_uni)
data_uni <- data_uni[1:100,]
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
contrasts <- as.factor(levels(fac1))
colnames(initialmodel) <- contrasts
combinations <- expand.grid(contrasts, contrasts); combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]; combinations
combinations <- combinations[order(combinations$Var1),]; combinations
combinations <- combinations[c(1:(nrow(combinations)/2)),]; combinations
com_names <- NULL
com_names <- NULL
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
com_names
?makeContrasts
data_uni <- data.frame(cbind(id = seq(1:150), iris[1:150,c(5,1:4)]))
colnames(data_uni)[2] <- "Group"
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
contrasts <- as.factor(levels(fac1))
colnames(initialmodel) <- contrasts
combinations <- expand.grid(contrasts, contrasts); combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]; combinations
combinations <- combinations[order(combinations$Var1),]; combinations
combinations <- combinations[c(1:(nrow(combinations)/2)),]; combinations
com_names <- NULL
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
makeContrasts(paste0(com_names, sep = ","), levels = initialmodel)
com_names
makeContrasts(paste(shQuote(com_names), collapse=", "), levels = initialmodel)
paste(shQuote(com_names), collapse=", ")
makeContrasts(noquote(paste(shQuote(com_names), collapse=", ")), levels = initialmodel)
noquote(paste(shQuote(com_names), collapse=", "))
makeContrasts(com_names[1], levels = initialmodel)
makeContrasts(com_names, levels = initialmodel)
combinations <- expand.grid(contrasts, contrasts); combinations
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]; combinations
combinations <- combinations[order(combinations$Var1),]; combinations
combinations <- combinations[c(1:(nrow(combinations)/2)),]; combinations
com_names <- NULL
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
noquote(paste(shQuote(com_names), collapse=", "))
makeContrasts(com_names, levels = initialmodel)
makeContrasts(com_names[2], levels = initialmodel)
runApp()
?selectInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
com_names <- c(NULL)
runApp()
runApp()
runApp()
com_names <- c()
shiny::runApp()
runApp()
runApp()
data_uni <- readr::read_csv("/home/pol/Escritorio/test.csv")
data_uni <- data_uni[1:100,]
colnames(data_uni)[2] <- "Group"
contrasts <- as.factor(levels(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts(com_names[1], levels = initialmodel)
com_names
contrasts <- as.factor(levels(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
combinations
contrasts <- as.factor(levels(data_uni$Group))
contrasts
data_uni <- readr::read_csv("/home/pol/Escritorio/test.csv")
data_uni <- data_uni[1:100,]
colnames(data_uni)[2] <- "Group"
View(data_uni)
contrasts <- as.factor(levels(data_uni$Group))
contrasts
data_uni$Group
levels(data_uni$Group)
as.factor(levels(data_uni$Group))
contrasts <- levels(as.factor(data_uni$Group))
contrasts
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts(com_names[1], levels = initialmodel)
trans_limma <- t(data_uni[,c(3:ncol(data_uni))])
model <- lmFit(trans_limma, initialmodel)
model <- contrasts.fit(model, cont.matrix)
modelstats <- eBayes(model)
res <- topTable(modelstats, number = ncol(data_uni) , coef = 1,
sort.by = "p")
View(res)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
cont.matrix <- makeContrasts(com_names[1:2], levels = initialmodel)
data_uni <- readr::read_csv("/home/pol/Escritorio/test.csv")
data_uni <- data_uni[1:100,]
#data_uni <- data.frame(cbind(id = seq(1:150), iris[1:150,c(5,1:4)]))
covariate_uni <- MASS::Boston[1:100,5:10]
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts(com_names[1:2], levels = initialmodel)
cont.matrix
cont.matrix <- makeContrasts(com_names[1], levels = initialmodel)
cont.matrix
cont.matrix <- makeContrasts(com_names[2], levels = initialmodel)
cont.matrix
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
cont.matrix <- makeContrasts(setosa-virginica, levels = initialmodel)
cont.matrix <- makeContrasts("setosa-virginica", levels = initialmodel)
data_uni <- readr::read_csv("/home/pol/Escritorio/test.csv")
colnames(data_uni)[2] <- "Group"
contrasts <- levels(as.factor(data_uni$Group))
combinations <- expand.grid(contrasts, contrasts)
combinations <- combinations[!(combinations$Var1 == combinations$Var2),]
combinations <- combinations[order(combinations$Var1),]
combinations <- combinations[c(1:(nrow(combinations)/2)),]
com_names <- c()
for (i in 1:nrow(combinations)){
com_names[i] <- paste0(combinations$Var1[i],"-",combinations$Var2[i])
}
fac1 <- as.factor(data_uni$Group)
initialmodel <- model.matrix( ~ 0 + fac1)
colnames(initialmodel) <- contrasts
cont.matrix <- makeContrasts("setosa-virginica", levels = initialmodel)
cont.matrix
runApp()
runApp()
runApp()
runApp()
