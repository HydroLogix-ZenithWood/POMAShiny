shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
remotes::install_github("federicomarini/GeneTonic",
dependencies = TRUE, build_vignettes = FALSE)
shiny::runApp('app')
runApp('app')
runApp('app')
?a
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
packageVersion("POMA")
target <- data.frame(id = c(1:10), grp = iris$Species[1:5,51:55])
target <- data.frame(id = c(1:10), grp = iris$Species[c(1:5,51:55)])
targer
targer
targe
target
features <- iris[c(1:5,51:55), 1:4]
features$Sepal.Length[c(1:8)] <- 0
features$Sepal.Width[c(1:8)] <- NA
features
write.csv(target, "/Users/pol/Desktop/target.csv", row.names = FALSE)
write.csv(features, "/Users/pol/Desktop/features.csv", row.names = FALSE)
shiny::runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
library(POMA)
save(st000284, file = "/Users/pol/Desktop/st000284.rda")
library(bs4Dash)
library(shiny)
library(DT)
library(plotly)
library(shinyhelper)
library(rmarkdown)
library(tidyverse)
library(shinyWidgets)
library(patchwork)
library(POMA)
library(ggraph)
library(Biobase)
library(fresh)
runApp('app')
runApp('app')
runApp('app')
Biobase::pData(st000284) %>%
rownames_to_column("ID") %>%
dplyr::rename(ID = 1, Group = 2)
load("/Users/pol/Desktop/.DS_Store")
load("/Users/pol/Desktop/st000284.rda")
data <- load("/Users/pol/Desktop/st000284.rda")
data
LoadToEnvironment <- function(RData, env = new.env()) {
load(RData, env)
return(env)
}
LoadToEnvironment("/Users/pol/Desktop/st000284.rda")
data <- LoadToEnvironment("/Users/pol/Desktop/st000284.rda")
data
runApp('app')
runApp('app')
runApp('app')
load("/var/folders/kd/x9tbfxb10jg6c10t0l7hw_b40000gn/T//RtmplzM8pN/485a1bb4e23e495856f24229/0.rda")
load("/var/folders/kd/x9tbfxb10jg6c10t0l7hw_b40000gn/T//RtmplzM8pN/485a1bb4e23e495856f24229/0.rda")
runApp('app')
runApp('app')
runApp('app')
runApp()
runApp()
runApp('app')
?prettySwitch
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
shiny::runApp()
shiny::runApp("app/")
shiny::runApp("app/")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
target <- readr::read_csv("/Users/pol/Desktop/maple_tomas/target.csv")
target2 <- target %>% mutate(cov1 = c(rep("C", 102), rep("D", 102)), cov2 = c(rep("S", 40), rep("Y", 60), rep("U", 4)), cov3 = rnorm(204, mean = 25, sd = 5))
target2 <- target %>% mutate(cov1 = c(rep("C", 102), rep("D", 102)), cov2 = c(rep("S", 140), rep("Y", 60), rep("U", 4)), cov3 = rnorm(204, mean = 25, sd = 5))
View(target2)
summary(target2)
write_csv(target2, "/Users/pol/Desktop/maple_tomas/target_cov_ok.csv")
target2[5,5] <- NA
write_csv(target2, "/Users/pol/Desktop/maple_tomas/target_cov_NA.csv")
runApp('app')
runApp('app')
packageVersion(POMA)
packageVersion("POMA")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
?POMA::PomaLasso
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
library(POMA)
mm <- POa
mm <- PomaMultivariate(st000284, method = "plsda")
mm$errors_plsda
mm %>%
pivot_wider(names_from = name, values_from = value) %>%
column_to_rownames("Component") %>%
select_at(vars(starts_with("overall")))
mm$errors_plsda %>%
pivot_wider(names_from = name, values_from = value) %>%
column_to_rownames("Component") %>%
select_at(vars(starts_with("overall")))
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
library(POMA)
library(MSnbase)
msnset <- st000336[11:15, ]
exprs(msnset)
msnset <- st000336[11:15, 1:5]
exprs(msnset)
pData(msnset)
msnset <- st000336[11:15, c(1,2,3,4, 10:14]
exprs(msnset)
msnset <- st000336[11:15, c(1,2,3,4, 10:14)]
exprs(msnset)
pData(msnset)
msnset <- st000336[11:15, c(1,2,3,4, 13:14)]
exprs(msnset)
pData(msnset)
msnset <- st000336[11:15, c(1,2,3,4, 13:16)]
exprs(msnset)
pData(msnset)
msnset <- st000336[11:15, c(1:4, 13:16)]
exprs(msnset)
pData(msnset)
fvarLabels(msnset)
exprs(msnset)
## grouping with a list
grpl <- list(c("histidine", "isoleucine"), "leucine", "lysine", "methionine")
## optional naming
names(grpl) <- featureNames(msnset)
grpl
## grouping with a list
grpl <- list(c("histidine", "isoleucine"), c("leucine", "lysine"), "leucine", "lysine", "methionine")
## optional naming
names(grpl) <- featureNames(msnset)
exprs(combineFeatures(msnset, groupBy = grpl, method = "sum", redundancy.handler = "unique"))
msnset <- st000336[11:15, c(1:4, 13:16)]
exprs(msnset)
## grouping with a list
grpl <- list(c("histidine", "isoleucine"), c("leucine", "lysine"), "leucine", "lysine", "methionine")
## optional naming
names(grpl) <- featureNames(msnset)
exprs(combineFeatures(msnset, groupBy = grpl, method = "sum", redundancy.handler = "unique"))
exprs(combineFeatures(msnset, groupBy = grpl, method = "sum", redundancy.handler = "multiple"))
featureData(msnset)
library(POMA)
library(MSnbase)
msnset <- st000336[11:15, c(1:4, 13:16)]
exprs(msnset)
pData(msnset)
## grouping with a list
grp <- list(c("histidine", "isoleucine"), c("leucine", "lysine"), "leucine", "lysine", "methionine")
exprs(msnset)
## optional naming
exprs(combineFeatures(msnset, groupBy = grp, method = "sum", redundancy.handler = "unique"))
library(MSnbase)
msnset <- st000336[11:15, c(1:4, 13:16)]
exprs(msnset)
pData(msnset)
## grouping with a list
grp <- as.factor(c(1, 1, 2, 2, 3))
## optional naming
exprs(combineFeatures(msnset, groupBy = grp, method = "sum", redundancy.handler = "unique"))
nms <- c("histidine_isoleucine", "leucine_lysine", "methionine")
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "sum", redundancy.handler = "unique")
exprs(msnset2)
featureNames(msnset2) <- nms
exprs(msnset2)
msnset <- st000336[11:15, c(1:4, 13:16)]
exprs(msnset)
## grouping with a list
grp <- as.factor(c(1, 1, 2, 2, 3))
nms <- c("histidine_isoleucine", "leucine_lysine", "methionine")
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "sum", redundancy.handler = "unique")
featureNames(msnset2) <- nms
exprs(msnset2)
shiny::runApp('app')
runApp('app')
data <- st000284
Biobase::pData(data) %>%
rownames_to_column("ID") %>%
select(1,2) %>%
bind_cols(t(exprs(data)))
exprs(data)
t(exprs(data))
prepared_data <- Biobase::pData(data) %>%
rownames_to_column("ID") %>%
select(1,2) %>%
bind_cols(as.data.frame(t(exprs(data))))
View(prepared_data)
Biobase::pData(data) %>%
rownames_to_column("ID") %>%
select(1,2) %>%
bind_cols(as.data.frame(t(exprs(data))))
runApp('app')
msnset <- st000336[11:15, c(1:4, 13:16)]
exprs(msnset)
pData(msnset)
## grouping with a list
grp <- as.factor(c(1, 1, 2, 2, 3))
nms <- c("histidine_isoleucine", "leucine_lysine", "methionine")
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "sum", redundancy.handler = "unique")
featureNames(msnset2) <- nms
exprs(msnset2)
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "mean", redundancy.handler = "unique")
featureNames(msnset2) <- nms
exprs(msnset2)
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "median", redundancy.handler = "unique")
featureNames(msnset2) <- nms
exprs(msnset2)
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "weighted mean", redundancy.handler = "unique")
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "weighted.mean", redundancy.handler = "unique")
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "medpolish", redundancy.handler = "unique")
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "robust", redundancy.handler = "unique")
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "iPQF", redundancy.handler = "unique")
## optional naming
msnset2 <- combineFeatures(msnset, groupBy = grp, method = "NTR", redundancy.handler = "unique")
comb_file <- featureNames(st000284)
comb_file <- featureNames(st000284) %>%
as.tibble()
comb_file <- featureNames(st000284) %>%
as_tibble()
View(comb_file)
30*3
113-90
comb_file <- featureNames(st000284) %>%
as_tibble() %>%
mutate(my_group = c(rep(1, 30), rep(2, 30), rep(3, 30), rep(4, 23)),
name = c(rep("ft_one", 30), rep("ft_two", 30), rep("ft_three", 30), rep("ft_four", 23)))
View(comb_file)
readr::write_csv(comb_file, "/Users/pol/Desktop/comb_file.csv")
runApp('app')
prepared_data <- Biobase::pData(st000284) %>%
rownames_to_column("ID") %>%
select(1,2) %>%
bind_cols(as.data.frame(t(exprs(st000284))))
readr::write_csv(prepared_data[,1:2], "/Users/pol/Desktop/target_comb.csv")
readr::write_csv(prepared_data[,3:ncol(prepared_data)], "/Users/pol/Desktop/feat_comb.csv")
runApp('app')
runApp('app')
runApp('app')
prepared_data <- Biobase::pData(st000284) %>%
rownames_to_column("ID")
View(prepared_data)
readr::write_csv(prepared_data, "/Users/pol/Desktop/target_comb.csv")
runApp('app')
msnset <- st000336[11:15, c(1:4, 13:16)]
exprs(msnset)
pData(msnset)
features <- data.frame(feature1 = c(rnorm(5, mean = 3, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature2 = c(rnorm(5, mean = 1, sd = 0.5), rnorm(5, mean = 1, sd = 0.5)),
feature3 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2, sd = 0.5)),
feature4 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature5 = c(rnorm(5, mean = 14, sd = 0.5), rnorm(5, mean = 20, sd = 0.5)),
feature6 = c(rnorm(5, mean = 8, sd = 0.5), rnorm(5, mean = 9, sd = 0.5)))
View(features)
group = c(rep("Control", 5), rep("Case", 5))
target <- data.frame(ID = c("sample1", "sample2", "sample3", "sample4", "sample5"),
group = c(rep("Control", 5), rep("Case", 5)))
View(target)
grouping <- data.frame(feature = c("feature1", "feature2", "feature3", "feature5", "feature6"),
grouping_factor = c(1, 1, 2, 3, 4, 4),
new_name = c("features1_2", "features1_2", "feature3", "features5_6", "features5_6"))
grouping <- data.frame(feature = c("feature1", "feature2", "feature3", "feature5", "feature6"),
grouping_factor = c(1, 1, 2, 3, 4, 4),
new_name = c("features1_2", "features1_2", "feature3", "feature4", "features5_6", "features5_6"))
grouping <- data.frame(feature = c("feature1", "feature2", "feature3", "feature4", "feature5", "feature6"),
grouping_factor = c(1, 1, 2, 3, 4, 4),
new_name = c("features1_2", "features1_2", "feature3", "feature4", "features5_6", "features5_6"))
View(grouping)
runApp('app')
readr::write_csv(prepared_data, "/Users/pol/Desktop/target_comb.csv")--
/)
features <- data.frame(feature1 = c(rnorm(5, mean = 3, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature2 = c(rnorm(5, mean = 1, sd = 0.5), rnorm(5, mean = 1, sd = 0.5)),
feature3 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2, sd = 0.5)),
feature4 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature5 = c(rnorm(5, mean = 14, sd = 0.5), rnorm(5, mean = 20, sd = 0.5)),
feature6 = c(rnorm(5, mean = 8, sd = 0.5), rnorm(5, mean = 9, sd = 0.5)))
target <- data.frame(ID = c("sample1", "sample2", "sample3", "sample4", "sample5"),
group = c(rep("control", 5), rep("case", 5)))
grouping <- data.frame(feature = c("feature1", "feature2", "feature3", "feature4", "feature5", "feature6"),
grouping_factor = c(1, 1, 2, 3, 4, 4),
new_name = c("features1_2", "features1_2", "feature3", "feature4", "features5_6", "features5_6"))
readr::write_csv(target, "/Users/pol/Dropbox/POMA/POMAShiny/example_data/example_target.csv")
readr::write_csv(features, "/Users/pol/Dropbox/POMA/POMAShiny/example_data/example_features.csv")
readr::write_csv(grouping, "/Users/pol/Dropbox/POMA/POMAShiny/example_data/example_grouping.csv")
runApp('app')
features <- data.frame(feature1 = c(rnorm(5, mean = 3, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature2 = c(rnorm(5, mean = 1, sd = 0.5), rnorm(5, mean = 1, sd = 0.5)),
feature3 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2, sd = 0.5)),
feature4 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature5 = c(rnorm(5, mean = 14, sd = 0.5), rnorm(5, mean = 20, sd = 0.5)),
feature6 = c(rnorm(5, mean = 8, sd = 0.5), rnorm(5, mean = 9, sd = 0.5)))
rownames(features)
View(features)
library(tidyverse)
features <- tibble(feature1 = c(rnorm(5, mean = 3, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature2 = c(rnorm(5, mean = 1, sd = 0.5), rnorm(5, mean = 1, sd = 0.5)),
feature3 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2, sd = 0.5)),
feature4 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature5 = c(rnorm(5, mean = 14, sd = 0.5), rnorm(5, mean = 20, sd = 0.5)),
feature6 = c(rnorm(5, mean = 8, sd = 0.5), rnorm(5, mean = 9, sd = 0.5)))
features
features <- tibble(feature1 = c(rnorm(5, mean = 3, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature2 = c(rnorm(5, mean = 1, sd = 0.5), rnorm(5, mean = 1, sd = 0.5)),
feature3 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2, sd = 0.5)),
feature4 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature5 = c(rnorm(5, mean = 14, sd = 0.5), rnorm(5, mean = 20, sd = 0.5)),
feature6 = c(rnorm(5, mean = 8, sd = 0.5), rnorm(5, mean = 9, sd = 0.5))) %>%
remove_rownames()
features
features <- tibble(feature1 = c(rnorm(5, mean = 3, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature2 = c(rnorm(5, mean = 1, sd = 0.5), rnorm(5, mean = 1, sd = 0.5)),
feature3 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2, sd = 0.5)),
feature4 = c(rnorm(5, mean = 2, sd = 0.5), rnorm(5, mean = 2.5, sd = 0.5)),
feature5 = c(rnorm(5, mean = 14, sd = 0.5), rnorm(5, mean = 20, sd = 0.5)),
feature6 = c(rnorm(5, mean = 8, sd = 0.5), rnorm(5, mean = 9, sd = 0.5)))
target <- tibble(ID = c("sample1", "sample2", "sample3", "sample4", "sample5"),
group = c(rep("control", 5), rep("case", 5)))
target <- tibble(ID = c("sample1", "sample2", "sample3", "sample4", "sample5", "sample6"),
group = c(rep("control", 3), rep("case", 3)))
grouping <- tibble(feature = c("feature1", "feature2", "feature3", "feature4", "feature5", "feature6"),
grouping_factor = c(1, 1, 2, 3, 4, 4),
new_name = c("features1_2", "features1_2", "feature3", "feature4", "features5_6", "features5_6"))
View(features)
View(grouping)
View(target)
readr::write_csv(target, "/Users/pol/Dropbox/POMA/POMAShiny/example_data/example_target.csv")
readr::write_csv(features, "/Users/pol/Dropbox/POMA/POMAShiny/example_data/example_features.csv")
readr::write_csv(grouping, "/Users/pol/Dropbox/POMA/POMAShiny/example_data/example_grouping.csv")
runApp('app')
features <- tibble(feature1 = c(rnorm(3, mean = 3, sd = 0.5), rnorm(3, mean = 2.5, sd = 0.5)),
feature2 = c(rnorm(3, mean = 1, sd = 0.5), rnorm(3, mean = 1, sd = 0.5)),
feature3 = c(rnorm(3, mean = 2, sd = 0.5), rnorm(3, mean = 2, sd = 0.5)),
feature4 = c(rnorm(3, mean = 2, sd = 0.5), rnorm(3, mean = 2.5, sd = 0.5)),
feature5 = c(rnorm(3, mean = 14, sd = 0.5), rnorm(3, mean = 20, sd = 0.5)),
feature6 = c(rnorm(3, mean = 8, sd = 0.5), rnorm(3, mean = 9, sd = 0.5)))
target <- tibble(ID = c("sample1", "sample2", "sample3", "sample4", "sample5", "sample6"),
group = c(rep("control", 3), rep("case", 3)))
grouping <- tibble(feature = c("feature1", "feature2", "feature3", "feature4", "feature5", "feature6"),
grouping_factor = c(1, 1, 2, 3, 4, 4),
new_name = c("features1_2", "features1_2", "feature3", "feature4", "features5_6", "features5_6"))
readr::write_csv(target, "/Users/pol/Dropbox/POMA/POMAShiny/example_data/example_target.csv")
readr::write_csv(features, "/Users/pol/Dropbox/POMA/POMAShiny/example_data/example_features.csv")
readr::write_csv(grouping, "/Users/pol/Dropbox/POMA/POMAShiny/example_data/example_grouping.csv")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
target <- readr::read_csv("example_data/example_target.csv")
features <- readr::read_csv("example_data/example_features.csv")
grouping <- readr::read_csv("example_data/example_grouping.csv")
data <- PomaMSnSetClass(target, features)
data2 <- MSnbase::combineFeatures(data, groupBy = grouping$grouping_factor, method = "sum")
featureData(data2)
featureCV(data2)
featureData(data2)@varLabels
ddd <- featureData(data2)
ddd@varMetadata
ddd@data
nms <- unique(grouping$new_name)
featureNames(data2) <- nms
ddd@data
featureData(data2)@data
data <- data2
cv_data <- as.data.frame(t(featureData(data)@data))
View(cv_data)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
rownames(pData(data))
rownames(pData(st000284))
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
shiny::runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
shiny::runApp('app')
runApp('app')
shiny::runApp('app')
shiny::runApp('app')
# for shiny
library(bs4Dash)
library(shiny)
library(DT)
library(plotly)
library(shinyhelper)
library(rmarkdown)
library(tidyverse)
library(shinyWidgets)
library(patchwork)
library(POMA)
library(ggraph)
library(Biobase)
library(fresh)
library(MSnbase)
# for EDA report
library(reshape2)
library(knitr)
runApp('app')
?bs4DashPage
runApp('app')
shiny::runApp('app')
?bs4DashPage
bs4DashGallery()
install.packages("bs4Dash")
install.packages("bs4Dash")
shiny::runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
bs4Dash::ionicon()
bs4Dash::ionicon("home")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
?use_theme
devtools::install_version("bs4Dash", version = "0.5.0", repos = "http://cran.us.r-project.org")
shiny::runApp('app')
